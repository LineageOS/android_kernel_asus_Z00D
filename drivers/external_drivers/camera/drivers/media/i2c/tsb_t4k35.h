/*
 * Support for Toshiba camera sensor.
 *
 * Copyright (c) 2010 Intel Corporation. All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301, USA.
 *
 */

#ifndef __T4K35_H__
#define __T4K35_H__
#include <linux/atomisp_platform.h>
#include <linux/atomisp.h>
#include <linux/delay.h>
#include <linux/i2c.h>
#include <linux/kernel.h>
#include <linux/spinlock.h>
#include <linux/types.h>
#include <linux/videodev2.h>
#include <linux/v4l2-mediabus.h>
#include <media/media-entity.h>
#include <media/v4l2-chip-ident.h>
#include <media/v4l2-ctrls.h>
#include <media/v4l2-device.h>
#include <media/v4l2-subdev.h>

#define MAX_FPS_OPTIONS_SUPPORTED	3
#define I2C_MSG_LENGTH		0x2
#define E2PROM_2ADDR 0x80000000
#define E2PROM_ADDR_MASK 0x7fffffff

/* Defines for register writes and register array processing */
#define T4K35_BYTE_MAX	32
#define T4K35_SHORT_MAX	16
#define I2C_RETRY_COUNT		5
#define T4K35_TOK_MASK	0xfff0

#define T4K35_MCLK		192

/* TODO - This should be added into include/linux/videodev2.h */
#ifndef V4L2_IDENT_T4K35
#define V4L2_IDENT_T4K35	8245
#endif

/*
 * t4k35 System control registers
 */
#define T4K35_MASK_5BIT	0x1F
#define T4K35_MASK_4BIT	0xF
#define T4K35_MASK_2BIT	0x3
#define T4K35_MASK_11BIT	0x7FF
#define T4K35_INTG_BUF_COUNT		2

#define T4K35_FINE_INTG_TIME		0xA41	// Read Only register for Toshiba sensor

#define T4K35_VT_PIX_CLK_DIV			0x0301
#define T4K35_VT_SYS_CLK_DIV			0x0303
#define T4K35_PRE_PLL_CLK_DIV			0x0305
//#define T4K35_PLL_MULTIPLIER			0x0306	// PLL_MULTIPLER_
#define T4K35_PLL_MULTIPLIER			0x030E	// PLL_MULTIPLER_ST
//#define IMX_OP_PIX_DIV			0x0309	// NO exist for Toshiba sensor
#define T4K35_OP_SYS_DIV			0x030B
#define T4K35_FRAME_LENGTH_LINES		0x0340
#define T4K35_LINE_LENGTH_PIXELS		0x0342
//#define IMX_COARSE_INTG_TIME_MIN	0x1004	// NO exist for Toshiba sensor
//#define IMX_COARSE_INTG_TIME_MAX	0x1006	// NO exist for Toshiba sensor
//#define IMX_BINNING_ENABLE		0x0390
#define T4K35_H_BINNING_ENABLE		0x0900	// 0,1,2 for 1/1,1/2,1/4 binning
#define T4K35_V_BINNING_ENABLE		0x0901	// 0,1,2 for 1/1,1/2,1/4 binning
#define T4K35_BINNING_TYPE		0x0902	// 0,1 for Ave,Add mode

//#define IMX_READ_MODE				0x0390	// binning enable for imx

//#define IMX_HORIZONTAL_START_H 0x0344	// NO exist for Toshiba sensor
#define T4K35_VERTICAL_START_H 0x0346
//#define IMX_HORIZONTAL_END_H 0x0348	// NO exist for Toshiba sensor
#define T4K35_VERTICAL_END_H 0x034A
#define T4K35_HORIZONTAL_OUTPUT_SIZE_H 0x034c
#define T4K35_VERTICAL_OUTPUT_SIZE_H 0x034e

#define T4K35_COARSE_INTEGRATION_TIME		0x0202
#define T4K35_TEST_PATTERN_MODE			0x0600
#define T4K35_IMG_ORIENTATION			0x0101
#define T4K35_VFLIP_BIT			2
#define T4K35_HFLIP_BIT			1
#define T4K35_GLOBAL_GAIN			0x0204
//#define IMX_SHORT_AGC_GAIN		0x0233	// NO exist for Toshiba sensor
#define T4K35_DGC_ADJ		0x0210
#define T4K35_DGC_LEN		10
#define T4K35_MAX_EXPOSURE_SUPPORTED 0xfff9
#define T4K35_MAX_GLOBAL_GAIN_SUPPORTED 0x0fff
#define T4K35_MAX_DIGITAL_GAIN_SUPPORTED 0x03ff

#define MAX_FMTS 1
//#define IMX_OTP_DATA_SIZE		1280

#define T4K35_SUBDEV_PREFIX "t4k"
#define T4K35_DRIVER	"t4k35"

/* Sensor ids from identification register */
#define T4K35_NAME_K35	"t4k35"
#define T4K35_ID	0x1481

#if 0	// T4K35
/* Sensor id based on i2c_device_id table
 * (Fuji module can not be detected based on sensor registers) */
#define IMX135_FUJI_ID			0x0136
#define IMX_NAME_135_FUJI		"imx135fuji"

/* imx175 - use dw9714 vcm */
#define IMX175_MERRFLD 0x175
#define IMX175_VALLEYVIEW 0x176
#define IMX135_SALTBAY 0x135
#define IMX135_VICTORIABAY 0x136
#define IMX132_SALTBAY 0x132
#define IMX134_VALLEYVIEW 0x134
#else	// T4K35
#define T4K35_MERRFLD 0x035
#endif	// T4K35

/* otp - specific settings */
#define E2PROM_ADDR 0xa0
#define E2PROM_LITEON_12P1BA869D_ADDR 0xa0
#define E2PROM_ABICO_SS89A839_ADDR 0xa8
#define DEFAULT_OTP_SIZE 1280
#define E2PROM_LITEON_12P1BA869D_SIZE 544

#define T4K35_ID_DEFAULT	0x0000
#define T4K35_CHIP_ID	0x0000

#define T4K35_RES_WIDTH_MAX	3280
#define T4K35_RES_HEIGHT_MAX	2464

/* Defines for lens/VCM */
#define T4K35_FOCAL_LENGTH_NUM	369	/*3.69mm*/
#define T4K35_FOCAL_LENGTH_DEM	100
#define T4K35_F_NUMBER_DEFAULT_NUM	22
#define T4K35_F_NUMBER_DEM	10
#define T4K35_INVALID_CONFIG	0xffffffff
#define T4K35_MAX_FOCUS_POS	1023
#define T4K35_MAX_FOCUS_NEG	(-1023)
#define T4K35_VCM_SLEW_STEP_MAX	0x3f
#define T4K35_VCM_SLEW_TIME_MAX	0x1f

#define T4K35_BIN_FACTOR_MAX			4
#define T4K35_INTEGRATION_TIME_MARGIN	6
/*
 * focal length bits definition:
 * bits 31-16: numerator, bits 15-0: denominator
 */
#define T4K35_FOCAL_LENGTH_DEFAULT 0x1710064

/*
 * current f-number bits definition:
 * bits 31-16: numerator, bits 15-0: denominator
 */
#define T4K35_F_NUMBER_DEFAULT 0x16000a

/*
 * f-number range bits definition:
 * bits 31-24: max f-number numerator
 * bits 23-16: max f-number denominator
 * bits 15-8: min f-number numerator
 * bits 7-0: min f-number denominator
 */
#define T4K35_F_NUMBER_RANGE 0x160a160a

#define T4K35_OTP_DATA_SIZE		0x24

enum t4k35_tok_type {
	T4K35_8BIT  = 0x0001,
	T4K35_16BIT = 0x0002,
	T4K35_TOK_TERM   = 0xf000,	/* terminating token for reg list */
	T4K35_TOK_DELAY  = 0xfe00	/* delay token for reg list */
};

/**
 * struct t4k35_reg - MI sensor  register format
 * @type: type of the register
 * @reg: 16-bit offset to register
 * @val: 8/16/32-bit register value
 *
 * Define a structure for sensor register initialization values
 */
struct t4k35_reg {
	enum t4k35_tok_type type;
	u16 sreg;
	u32 val;	/* @set value for read/mod/write, @mask */
};

struct t4k35_fps_setting {
	int fps;
	unsigned short pixels_per_line;
	unsigned short lines_per_frame;
	const struct t4k35_reg *regs; /* regs that the fps setting needs */
};

struct t4k35_resolution {
	const struct t4k35_fps_setting fps_options[MAX_FPS_OPTIONS_SUPPORTED];
	u8 *desc;
	const struct t4k35_reg *regs;
	int res;
	int width;
	int height;
	int fps;
	unsigned short pixels_per_line;
	unsigned short lines_per_frame;
	unsigned short skip_frames;
	u8 bin_factor_x;
	u8 bin_factor_y;
	bool used;
};

struct t4k35_af_data {
	u16 af_inf_pos;
	u16 af_30cm_pos;
	u16 af_10cm_pos;
	u16 af_start_curr;
	u8 module_id;
	u8 vendor_id;
	u32 date_code;
	u32 sn_number;
	u32 pn_number;
	u16 cks;
#if 0
	u16 default_af_inf_pos;
	u16 default_af_10cm_pos;
	u16 default_af_start;
	u16 default_af_end;
#endif
};

#define GROUPED_PARAMETER_HOLD_ENABLE  {T4K35_8BIT, 0x0104, 0x1}
#define GROUPED_PARAMETER_HOLD_DISABLE  {T4K35_8BIT, 0x0104, 0x0}

int t4k35_write_reg(struct i2c_client *client, u16 data_length, u16 reg, u16 val);

/************************** settings for t4k35 1124 *************************/
static struct t4k35_reg const t4k35_Full_3280x2464_25fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0xA0},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x09},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x09},
	{T4K35_8BIT, 0x040F, 0xA0},
	{T4K35_8BIT, 0x0820, 0x08},
	{T4K35_8BIT, 0x0821, 0x66},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x00},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x2464_15fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x17}, /* ASUS BSP ZZ Add for HDR abnomal EV from 0x09 to 0x10 */
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x0E},
	{T4K35_8BIT, 0x0343, 0x32},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x09},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x09},
	{T4K35_8BIT, 0x040F, 0xA0},
	{T4K35_8BIT, 0x0820, 0x08},
	{T4K35_8BIT, 0x0821, 0x66},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x00},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x1852_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x07},
	{T4K35_8BIT, 0x0341, 0x80},
	{T4K35_8BIT, 0x0342, 0x0E},
	{T4K35_8BIT, 0x0343, 0xFA},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x30},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x6B},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x07},
	{T4K35_8BIT, 0x034F, 0x3C},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x07},
	{T4K35_8BIT, 0x040F, 0x3C},
	{T4K35_8BIT, 0x0820, 0x08},
	{T4K35_8BIT, 0x0821, 0x66},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x1852_15fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x17},/* ASUS BSP ZZ Add for HDR abnomal EV from 0x07 to 0x0E*/
	{T4K35_8BIT, 0x0341, 0x80},
	{T4K35_8BIT, 0x0342, 0x0E},
	{T4K35_8BIT, 0x0343, 0xFA},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x30},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x6B},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x07},
	{T4K35_8BIT, 0x034F, 0x3C},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x07},
	{T4K35_8BIT, 0x040F, 0x3C},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_1632x1228_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x06},
	{T4K35_8BIT, 0x034D, 0x60},
	{T4K35_8BIT, 0x034E, 0x04},
	{T4K35_8BIT, 0x034F, 0xCC},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x04},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x02},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x60},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xCC},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_1616x916_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x3C},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x63},
	{T4K35_8BIT, 0x034C, 0x06},
	{T4K35_8BIT, 0x034D, 0x50},
	{T4K35_8BIT, 0x034E, 0x03},
	{T4K35_8BIT, 0x034F, 0x94},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x0C},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x50},
	{T4K35_8BIT, 0x040E, 0x03},
	{T4K35_8BIT, 0x040F, 0x94},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

/*****************************video************************/

static struct t4k35_reg const t4k35_FHD_1936x1096_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x07},
	{T4K35_8BIT, 0x0341, 0x80},
	{T4K35_8BIT, 0x0342, 0x0E},
	{T4K35_8BIT, 0x0343, 0xFA},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x30},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x6B},
	{T4K35_8BIT, 0x034C, 0x07},
	{T4K35_8BIT, 0x034D, 0x90},
	{T4K35_8BIT, 0x034E, 0x04},
	{T4K35_8BIT, 0x034F, 0x48},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x1B},
	{T4K35_8BIT, 0x0409, 0x06},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xC4},
	{T4K35_8BIT, 0x040E, 0x07},
	{T4K35_8BIT, 0x040F, 0x3A},
	{T4K35_8BIT, 0x0820, 0x08},
	{T4K35_8BIT, 0x0821, 0x66},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_HD_1296x736_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x3C},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x63},
	{T4K35_8BIT, 0x034C, 0x05},
	{T4K35_8BIT, 0x034D, 0x10},
	{T4K35_8BIT, 0x034E, 0x02},
	{T4K35_8BIT, 0x034F, 0xE0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x14},
	{T4K35_8BIT, 0x0409, 0x0A},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x54},
	{T4K35_8BIT, 0x040E, 0x03},
	{T4K35_8BIT, 0x040F, 0x98},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_736x496_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x02},
	{T4K35_8BIT, 0x034D, 0xE0},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0xF0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x23},
	{T4K35_8BIT, 0x0409, 0x0E},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x48},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x4A},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0x3E},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_656x496_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x02},
	{T4K35_8BIT, 0x034D, 0x90},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0xF0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x27},
	{T4K35_8BIT, 0x0409, 0x14},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x0A},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x40},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xBA},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_368x304_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x01},
	{T4K35_8BIT, 0x034D, 0x70},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0x30},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x40},
	{T4K35_8BIT, 0x0409, 0x54},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x08},
	{T4K35_8BIT, 0x040C, 0x05},
	{T4K35_8BIT, 0x040D, 0xC0},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xC0},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_336x256_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x01},
	{T4K35_8BIT, 0x034D, 0x50},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0x00},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x4D},
	{T4K35_8BIT, 0x0409, 0x0A},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x52},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xD0},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_192x160_30fps_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x06},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xF0},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0xE2},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x00},
	{T4K35_8BIT, 0x034D, 0xC0},
	{T4K35_8BIT, 0x034E, 0x00},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x7B},
	{T4K35_8BIT, 0x0409, 0x52},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x05},
	{T4K35_8BIT, 0x040D, 0xC4},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xD0},
	{T4K35_8BIT, 0x0820, 0x04},
	{T4K35_8BIT, 0x0821, 0x33},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_init_settings_1124[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0101, 0x00},
	{T4K35_8BIT, 0x0103, 0x00},
	{T4K35_8BIT, 0x0104, 0x00},
	{T4K35_8BIT, 0x0105, 0x00},
	{T4K35_8BIT, 0x0110, 0x00},
	{T4K35_8BIT, 0x0111, 0x02},
	{T4K35_8BIT, 0x0112, 0x0A},
	{T4K35_8BIT, 0x0113, 0x0A},
	{T4K35_8BIT, 0x0114, 0x03},
	{T4K35_8BIT, 0x0130, 0x13},
	{T4K35_8BIT, 0x0131, 0x33},
	{T4K35_8BIT, 0x0141, 0x00},
	{T4K35_8BIT, 0x0142, 0x00},
	{T4K35_8BIT, 0x0143, 0x00},
	{T4K35_8BIT, 0x0202, 0x09},
	{T4K35_8BIT, 0x0203, 0xB2},
	{T4K35_8BIT, 0x0204, 0x00},
	{T4K35_8BIT, 0x0205, 0x28},
	{T4K35_8BIT, 0x0210, 0x01},
	{T4K35_8BIT, 0x0211, 0x00},
	{T4K35_8BIT, 0x0212, 0x01},
	{T4K35_8BIT, 0x0213, 0x00},
	{T4K35_8BIT, 0x0214, 0x01},
	{T4K35_8BIT, 0x0215, 0x00},
	{T4K35_8BIT, 0x0216, 0x01},
	{T4K35_8BIT, 0x0217, 0x00},
	{T4K35_8BIT, 0x0230, 0x00},
	{T4K35_8BIT, 0x0232, 0x04},
	{T4K35_8BIT, 0x0234, 0x00},
	{T4K35_8BIT, 0x0235, 0x19},
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x0305, 0x03},
	{T4K35_8BIT, 0x0306, 0x00},
	{T4K35_8BIT, 0x0307, 0x70},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x030D, 0x03},
	{T4K35_8BIT, 0x030E, 0x00},
	{T4K35_8BIT, 0x030F, 0x73},
	{T4K35_8BIT, 0x0310, 0x00},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xB8},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0x9C},
	{T4K35_8BIT, 0x0344, 0x00},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x09},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0403, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0408, 0x00},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x09},
	{T4K35_8BIT, 0x040F, 0xA0},
	{T4K35_8BIT, 0x0601, 0x00},
	{T4K35_8BIT, 0x0602, 0x02},
	{T4K35_8BIT, 0x0603, 0xC0},
	{T4K35_8BIT, 0x0604, 0x02},
	{T4K35_8BIT, 0x0605, 0xC0},
	{T4K35_8BIT, 0x0606, 0x02},
	{T4K35_8BIT, 0x0607, 0xC0},
	{T4K35_8BIT, 0x0608, 0x02},
	{T4K35_8BIT, 0x0609, 0xC0},
	{T4K35_8BIT, 0x060A, 0x00},
	{T4K35_8BIT, 0x060B, 0x00},
	{T4K35_8BIT, 0x060C, 0x00},
	{T4K35_8BIT, 0x060D, 0x00},
	{T4K35_8BIT, 0x060E, 0x00},
	{T4K35_8BIT, 0x060F, 0x00},
	{T4K35_8BIT, 0x0610, 0x00},
	{T4K35_8BIT, 0x0611, 0x00},
	{T4K35_8BIT, 0x0800, 0x88},
	{T4K35_8BIT, 0x0801, 0x38},
	{T4K35_8BIT, 0x0802, 0x78},
	{T4K35_8BIT, 0x0803, 0x48},
	{T4K35_8BIT, 0x0804, 0x48},
	{T4K35_8BIT, 0x0805, 0x40},
	{T4K35_8BIT, 0x0806, 0x00},
	{T4K35_8BIT, 0x0807, 0x48},
	{T4K35_8BIT, 0x0808, 0x01},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0822, 0x00},
	{T4K35_8BIT, 0x0823, 0x00},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x0A05, 0x01},
	{T4K35_8BIT, 0x0A06, 0x01},
	{T4K35_8BIT, 0x0A07, 0x98},
	{T4K35_8BIT, 0x0A0A, 0x01},
	{T4K35_8BIT, 0x0A0B, 0x98},
	{T4K35_8BIT, 0x0C00, 0x00},
	{T4K35_8BIT, 0x0C02, 0x00},
	{T4K35_8BIT, 0x0C04, 0x00},
	{T4K35_8BIT, 0x0C05, 0x32},
	{T4K35_8BIT, 0x0C06, 0x00},
	{T4K35_8BIT, 0x0C07, 0x10},
	{T4K35_8BIT, 0x0C08, 0x00},
	{T4K35_8BIT, 0x0C09, 0x49},
	{T4K35_8BIT, 0x0C0A, 0x01},
	{T4K35_8BIT, 0x0C0B, 0x68},
	{T4K35_8BIT, 0x0C0C, 0x00},
	{T4K35_8BIT, 0x0C0D, 0x34},
	{T4K35_8BIT, 0x0C0E, 0x00},
	{T4K35_8BIT, 0x0C0F, 0x40},
	{T4K35_8BIT, 0x0C12, 0x01},
	{T4K35_8BIT, 0x0C14, 0x00},
	{T4K35_8BIT, 0x0C15, 0x01},
	{T4K35_8BIT, 0x0C16, 0x00},
	{T4K35_8BIT, 0x0C17, 0x20},
	{T4K35_8BIT, 0x0C18, 0x00},
	{T4K35_8BIT, 0x0C19, 0x40},
	{T4K35_8BIT, 0x0C1A, 0x00},
	{T4K35_8BIT, 0x0C1B, 0x00},
	{T4K35_8BIT, 0x0F00, 0x00},
	{T4K35_8BIT, 0x0F01, 0x01},
	{T4K35_8BIT, 0x0F02, 0x01},
	{T4K35_8BIT, 0x0F03, 0x40},
	{T4K35_8BIT, 0x0F04, 0x00},
	{T4K35_8BIT, 0x0F05, 0x40},
	{T4K35_8BIT, 0x0F06, 0x01},
	{T4K35_8BIT, 0x0F07, 0x00},
	{T4K35_8BIT, 0x0F08, 0x01},
	{T4K35_8BIT, 0x0F09, 0x00},
	{T4K35_8BIT, 0x0F0A, 0x01},
	{T4K35_8BIT, 0x0F0B, 0x00},
	{T4K35_8BIT, 0x0F0C, 0x01},
	{T4K35_8BIT, 0x0F0D, 0x00},
	{T4K35_8BIT, 0x0F0E, 0x00},
	{T4K35_8BIT, 0x0F0F, 0x01},
	{T4K35_8BIT, 0x0F10, 0x50},
	{T4K35_8BIT, 0x0F11, 0x00},
	{T4K35_8BIT, 0x0F12, 0x50},
	{T4K35_8BIT, 0x0F13, 0x01},
	{T4K35_8BIT, 0x0F14, 0x00},
	{T4K35_8BIT, 0x0F15, 0x01},
	{T4K35_8BIT, 0x0F16, 0x00},
	{T4K35_8BIT, 0x0F17, 0x01},
	{T4K35_8BIT, 0x0F18, 0x00},
	{T4K35_8BIT, 0x0F19, 0x01},
	{T4K35_8BIT, 0x0F1A, 0x00},
	{T4K35_8BIT, 0x0F1B, 0x00},
	{T4K35_8BIT, 0x0F1C, 0x01},
	{T4K35_8BIT, 0x0F1D, 0x60},
	{T4K35_8BIT, 0x0F1E, 0x00},
	{T4K35_8BIT, 0x0F1F, 0x60},
	{T4K35_8BIT, 0x0F20, 0x01},
	{T4K35_8BIT, 0x0F21, 0x00},
	{T4K35_8BIT, 0x0F22, 0x01},
	{T4K35_8BIT, 0x0F23, 0x00},
	{T4K35_8BIT, 0x0F24, 0x01},
	{T4K35_8BIT, 0x0F25, 0x00},
	{T4K35_8BIT, 0x0F26, 0x01},
	{T4K35_8BIT, 0x0F27, 0x00},
	{T4K35_8BIT, 0x0F28, 0x00},
	{T4K35_8BIT, 0x1101, 0x00},
	{T4K35_8BIT, 0x1143, 0x00},
	{T4K35_8BIT, 0x1202, 0x00},
	{T4K35_8BIT, 0x1203, 0x19},
	{T4K35_8BIT, 0x1204, 0x00},
	{T4K35_8BIT, 0x1205, 0x40},
	{T4K35_8BIT, 0x1210, 0x01},
	{T4K35_8BIT, 0x1211, 0x00},
	{T4K35_8BIT, 0x1212, 0x01},
	{T4K35_8BIT, 0x1213, 0x00},
	{T4K35_8BIT, 0x1214, 0x01},
	{T4K35_8BIT, 0x1215, 0x00},
	{T4K35_8BIT, 0x1216, 0x01},
	{T4K35_8BIT, 0x1217, 0x00},
	{T4K35_8BIT, 0x1230, 0x00},
	{T4K35_8BIT, 0x1232, 0x04},
	{T4K35_8BIT, 0x1234, 0x00},
	{T4K35_8BIT, 0x1235, 0x19},
	{T4K35_8BIT, 0x1340, 0x09},
	{T4K35_8BIT, 0x1341, 0xCE},
	{T4K35_8BIT, 0x1342, 0x0E},
	{T4K35_8BIT, 0x1343, 0x74},
	{T4K35_8BIT, 0x1344, 0x00},
	{T4K35_8BIT, 0x1346, 0x00},
	{T4K35_8BIT, 0x1347, 0x00},
	{T4K35_8BIT, 0x134A, 0x09},
	{T4K35_8BIT, 0x134B, 0x9F},
	{T4K35_8BIT, 0x134C, 0x0C},
	{T4K35_8BIT, 0x134D, 0xD0},
	{T4K35_8BIT, 0x134E, 0x09},
	{T4K35_8BIT, 0x134F, 0xA0},
	{T4K35_8BIT, 0x1401, 0x00},
	{T4K35_8BIT, 0x1403, 0x00},
	{T4K35_8BIT, 0x1404, 0x10},
	{T4K35_8BIT, 0x1408, 0x00},
	{T4K35_8BIT, 0x1409, 0x00},
	{T4K35_8BIT, 0x140A, 0x00},
	{T4K35_8BIT, 0x140B, 0x00},
	{T4K35_8BIT, 0x140C, 0x0C},
	{T4K35_8BIT, 0x140D, 0xD0},
	{T4K35_8BIT, 0x140E, 0x09},
	{T4K35_8BIT, 0x140F, 0xA0},
	{T4K35_8BIT, 0x1601, 0x00},
	{T4K35_8BIT, 0x1602, 0x02},
	{T4K35_8BIT, 0x1603, 0xC0},
	{T4K35_8BIT, 0x1604, 0x02},
	{T4K35_8BIT, 0x1605, 0xC0},
	{T4K35_8BIT, 0x1606, 0x02},
	{T4K35_8BIT, 0x1607, 0xC0},
	{T4K35_8BIT, 0x1608, 0x02},
	{T4K35_8BIT, 0x1609, 0xC0},
	{T4K35_8BIT, 0x160A, 0x00},
	{T4K35_8BIT, 0x160B, 0x00},
	{T4K35_8BIT, 0x160C, 0x00},
	{T4K35_8BIT, 0x160D, 0x00},
	{T4K35_8BIT, 0x160E, 0x00},
	{T4K35_8BIT, 0x160F, 0x00},
	{T4K35_8BIT, 0x1610, 0x00},
	{T4K35_8BIT, 0x1611, 0x00},
	{T4K35_8BIT, 0x1900, 0x00},
	{T4K35_8BIT, 0x1901, 0x00},
	{T4K35_8BIT, 0x1902, 0x00},
	{T4K35_8BIT, 0x300A, 0x00},
	{T4K35_8BIT, 0x301A, 0x44},
	{T4K35_8BIT, 0x301B, 0x44},
	{T4K35_8BIT, 0x3024, 0x00},
	{T4K35_8BIT, 0x3025, 0x65},
	{T4K35_8BIT, 0x3037, 0x06},
	{T4K35_8BIT, 0x3038, 0x06},
	{T4K35_8BIT, 0x3039, 0x06},
	{T4K35_8BIT, 0x303A, 0x06},
	{T4K35_8BIT, 0x303B, 0x0B},
	{T4K35_8BIT, 0x303C, 0x03},
	{T4K35_8BIT, 0x303D, 0x03},
	{T4K35_8BIT, 0x3053, 0xC0},
	{T4K35_8BIT, 0x305D, 0x10},
	{T4K35_8BIT, 0x305E, 0x06},
	{T4K35_8BIT, 0x306B, 0x08},
	{T4K35_8BIT, 0x3073, 0x1C},
	{T4K35_8BIT, 0x3074, 0x0F},
	{T4K35_8BIT, 0x3075, 0x03},
	{T4K35_8BIT, 0x3076, 0x7F},
	{T4K35_8BIT, 0x307E, 0x02},
	{T4K35_8BIT, 0x308D, 0x03},
	{T4K35_8BIT, 0x308E, 0x20},
	{T4K35_8BIT, 0x3091, 0x04},
	{T4K35_8BIT, 0x3096, 0x75},
	{T4K35_8BIT, 0x3097, 0x7E},
	{T4K35_8BIT, 0x3098, 0x20},
	{T4K35_8BIT, 0x30A0, 0x82},
	{T4K35_8BIT, 0x30AB, 0x30},
	{T4K35_8BIT, 0x30CE, 0x60},
	{T4K35_8BIT, 0x30CF, 0x75},
	{T4K35_8BIT, 0x30D2, 0xB3},
	{T4K35_8BIT, 0x30D5, 0x09},
	{T4K35_8BIT, 0x3134, 0x01},
	{T4K35_8BIT, 0x314D, 0x80},
	{T4K35_8BIT, 0x315B, 0x22},
	{T4K35_8BIT, 0x315C, 0x22},
	{T4K35_8BIT, 0x315D, 0x02},
	{T4K35_8BIT, 0x3165, 0x67},
	{T4K35_8BIT, 0x3168, 0xF1},
	{T4K35_8BIT, 0x3169, 0x77},
	{T4K35_8BIT, 0x316A, 0x77},
	{T4K35_8BIT, 0x3173, 0x30},
	{T4K35_8BIT, 0x31B1, 0x40},
	{T4K35_8BIT, 0x31C1, 0x27},
	{T4K35_8BIT, 0x31DB, 0x15},
	{T4K35_8BIT, 0x31DC, 0xE0},
	{T4K35_8BIT, 0x3204, 0x00},
	{T4K35_8BIT, 0x3231, 0x00},
	{T4K35_8BIT, 0x3232, 0x00},
	{T4K35_8BIT, 0x3233, 0x00},
	{T4K35_8BIT, 0x3234, 0x00},
	{T4K35_8BIT, 0x3282, 0xC0},
	{T4K35_8BIT, 0x3284, 0x06},
	{T4K35_8BIT, 0x3285, 0x03},
	{T4K35_8BIT, 0x3286, 0x02},
	{T4K35_8BIT, 0x328A, 0x03},
	{T4K35_8BIT, 0x328B, 0x02},
	{T4K35_8BIT, 0x3290, 0x20},
	{T4K35_8BIT, 0x3294, 0x10},
	{T4K35_8BIT, 0x32A8, 0x84},
	{T4K35_8BIT, 0x32B3, 0x10},
	{T4K35_8BIT, 0x32B4, 0x1F},
	{T4K35_8BIT, 0x32B7, 0x3B},
	{T4K35_8BIT, 0x32BB, 0x0F},
	{T4K35_8BIT, 0x32BC, 0x0F},
	{T4K35_8BIT, 0x32BE, 0x04},
	{T4K35_8BIT, 0x32BF, 0x0F},
	{T4K35_8BIT, 0x32C0, 0x0F},
	{T4K35_8BIT, 0x32C6, 0x50},
	{T4K35_8BIT, 0x32C8, 0x0E},
	{T4K35_8BIT, 0x32C9, 0x0E},
	{T4K35_8BIT, 0x32CA, 0x0E},
	{T4K35_8BIT, 0x32CB, 0x0E},
	{T4K35_8BIT, 0x32CC, 0x0E},
	{T4K35_8BIT, 0x32CD, 0x0E},
	{T4K35_8BIT, 0x32CE, 0x08},
	{T4K35_8BIT, 0x32CF, 0x08},
	{T4K35_8BIT, 0x32D0, 0x08},
	{T4K35_8BIT, 0x32D1, 0x0F},
	{T4K35_8BIT, 0x32D2, 0x0F},
	{T4K35_8BIT, 0x32D3, 0x0F},
	{T4K35_8BIT, 0x32D4, 0x08},
	{T4K35_8BIT, 0x32D5, 0x08},
	{T4K35_8BIT, 0x32D6, 0x08},
	{T4K35_8BIT, 0x32DD, 0x02},
	{T4K35_8BIT, 0x32E0, 0x20},
	{T4K35_8BIT, 0x32E1, 0x20},
	{T4K35_8BIT, 0x32E2, 0x20},
	{T4K35_8BIT, 0x32F7, 0x00},
	{T4K35_8BIT, 0x3307, 0x28},
	{T4K35_8BIT, 0x3308, 0x27},
	{T4K35_8BIT, 0x3309, 0x0D},
	{T4K35_8BIT, 0x3384, 0x10},
	{T4K35_8BIT, 0x3424, 0x00},
	{T4K35_8BIT, 0x3425, 0x78},
	{T4K35_8BIT, 0x3427, 0xC0},
	{T4K35_8BIT, 0x3430, 0xA7},
	{T4K35_8BIT, 0x3431, 0x60},
	{T4K35_8BIT, 0x3432, 0x11},
	GROUPED_PARAMETER_HOLD_DISABLE,
	{T4K35_TOK_TERM, 0, 0}
};
/************************** settings for t4k35 *************************/
static struct t4k35_reg const t4k35_Full_3280x2464_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0x6E},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x09},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x09},
	{T4K35_8BIT, 0x040F, 0xA0},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x00},
	{T4K35_TOK_TERM, 0, 0}

};

static struct t4k35_reg const t4k35_Full_3280x2464_30fps_still_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x16},
	{T4K35_8BIT, 0x0343, 0x6C},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x09},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x09},
	{T4K35_8BIT, 0x040F, 0xA0},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x00},
	{T4K35_TOK_TERM, 0, 0}

};

static struct t4k35_reg const t4k35_Full_3280x2464_15fps_still_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x0A},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0x6E},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x09},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x09},
	{T4K35_8BIT, 0x040F, 0xA0},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x00},
	{T4K35_TOK_TERM, 0, 0}

};

static struct t4k35_reg const t4k35_Full_3280x2464_20fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x06},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x01},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x0B},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x84},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x0C},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0xD0},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x09},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xA0},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x00},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x10},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x00},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x0C},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xD0},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x09},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0xA0},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x0F},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x00},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x00},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x00},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}

};

static struct t4k35_reg const t4k35_Full_3280x2464_6fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x06},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x02},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x21},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0xAC},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x10},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x0C},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0xD0},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x09},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xA0},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x00},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x10},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x00},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x0C},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xD0},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x09},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0xA0},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x07},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x80},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x00},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x00},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x1852_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0x6E},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x30},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x6B},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x07},
	{T4K35_8BIT, 0x034F, 0x3C},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x07},
	{T4K35_8BIT, 0x040F, 0x3C},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x1852_30fps_still_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x16},
	{T4K35_8BIT, 0x0343, 0x6C},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x30},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x6B},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x07},
	{T4K35_8BIT, 0x034F, 0x3C},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x07},
	{T4K35_8BIT, 0x040F, 0x3C},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x1852_15fps_still_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x0A},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0x6E},
	{T4K35_8BIT, 0x0346, 0x01},
	{T4K35_8BIT, 0x0347, 0x30},
	{T4K35_8BIT, 0x034A, 0x08},
	{T4K35_8BIT, 0x034B, 0x6B},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x07},
	{T4K35_8BIT, 0x034F, 0x3C},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x07},
	{T4K35_8BIT, 0x040F, 0x3C},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x1852_27fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x06},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x01},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x08},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x88},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x01},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x30},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x08},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x6B},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x0C},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0xD0},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x07},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0x3C},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x00},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x10},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x00},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x0C},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xD0},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x07},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x3C},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x0F},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x00},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x00},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_3280x1852_8fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x06},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x02},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x19},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x42},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x10},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x01},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x30},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x08},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x6B},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x0C},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0xD0},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x07},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0x3C},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x00},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x10},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x00},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x0C},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xD0},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x07},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x3C},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x07},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x80},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x00},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Full_2576x1456_31fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x05},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x02},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x08},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0xEA},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x01},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x30},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x08},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x6F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x0A},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x10},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x05},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xB0},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x02},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x14},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x00},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x0C},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xD0},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x07},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x3E},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x07},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x80},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x00},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_1632x1228_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x06},
	{T4K35_8BIT, 0x034D, 0x60},
	{T4K35_8BIT, 0x034E, 0x04},
	{T4K35_8BIT, 0x034F, 0xCC},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x04},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x02},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x60},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xCC},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_1632x1228_28fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x06},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x03},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x08},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x3A},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x06},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x60},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x04},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xCC},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x00},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x10},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x04},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x02},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x06},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0x60},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x04},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0xCC},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x05},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x00},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x01},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x01},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_1616x916_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x06},
	{T4K35_8BIT, 0x034D, 0x50},
	{T4K35_8BIT, 0x034E, 0x03},
	{T4K35_8BIT, 0x034F, 0x94},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0409, 0x0C},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x9E},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x50},
	{T4K35_8BIT, 0x040E, 0x03},
	{T4K35_8BIT, 0x040F, 0x94},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_1616x916_37fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x06},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x03},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x06},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x3A},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x01},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x3C},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x08},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x63},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x06},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x50},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x03},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0x94},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x00},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x10},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x0C},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x06},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0x50},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x03},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x94},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x05},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x00},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x01},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x01},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

/*****************************video************************/
static struct t4k35_reg const t4k35_FHD_1936x1096_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xE4},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0x6E},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x07},
	{T4K35_8BIT, 0x034D, 0x90},
	{T4K35_8BIT, 0x034E, 0x04},
	{T4K35_8BIT, 0x034F, 0x48},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x1B},
	{T4K35_8BIT, 0x0409, 0x06},
	{T4K35_8BIT, 0x040A, 0x01},
	{T4K35_8BIT, 0x040B, 0x32},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xC4},
	{T4K35_8BIT, 0x040E, 0x07},
	{T4K35_8BIT, 0x040F, 0x3A},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_HD_1296x736_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x05},
	{T4K35_8BIT, 0x034D, 0x10},
	{T4K35_8BIT, 0x034E, 0x02},
	{T4K35_8BIT, 0x034F, 0xE0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x14},
	{T4K35_8BIT, 0x0409, 0x0A},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x9C},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x54},
	{T4K35_8BIT, 0x040E, 0x03},
	{T4K35_8BIT, 0x040F, 0x98},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_736x496_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x02},
	{T4K35_8BIT, 0x034D, 0xE0},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0xF0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x23},
	{T4K35_8BIT, 0x0409, 0x0E},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x48},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x4A},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0x3E},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_656x496_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x02},
	{T4K35_8BIT, 0x034D, 0x90},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0xF0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x27},
	{T4K35_8BIT, 0x0409, 0x14},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x0A},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x40},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xBA},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_368x304_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x01},
	{T4K35_8BIT, 0x034D, 0x70},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0x30},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x40},
	{T4K35_8BIT, 0x0409, 0x54},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x08},
	{T4K35_8BIT, 0x040C, 0x05},
	{T4K35_8BIT, 0x040D, 0xC0},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xC0},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_336x256_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x01},
	{T4K35_8BIT, 0x034D, 0x50},
	{T4K35_8BIT, 0x034E, 0x01},
	{T4K35_8BIT, 0x034F, 0x00},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x4D},
	{T4K35_8BIT, 0x0409, 0x0A},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x06},
	{T4K35_8BIT, 0x040D, 0x52},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xD0},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_192x160_30fps_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x02},
	{T4K35_8BIT, 0x0303, 0x08},
	{T4K35_8BIT, 0x030B, 0x02},
	{T4K35_8BIT, 0x0340, 0x05},
	{T4K35_8BIT, 0x0341, 0xEC},
	{T4K35_8BIT, 0x0342, 0x07},
	{T4K35_8BIT, 0x0343, 0x02},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x00},
	{T4K35_8BIT, 0x034D, 0xC0},
	{T4K35_8BIT, 0x034E, 0x00},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x02},
	{T4K35_8BIT, 0x0404, 0x7B},
	{T4K35_8BIT, 0x0409, 0x52},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x05},
	{T4K35_8BIT, 0x040D, 0xC4},
	{T4K35_8BIT, 0x040E, 0x04},
	{T4K35_8BIT, 0x040F, 0xCE},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0900, 0x01},
	{T4K35_8BIT, 0x0901, 0x01},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x32F7, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_FHD_1936x1096_30fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x05},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x02},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x09},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x36},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x01},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x30},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x08},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x6B},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x07},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x90},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x04},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0x48},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x02},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x1B},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x06},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x0C},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xC4},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x07},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x3A},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x07},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0x80},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x00},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_HD_1296x736_45fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x05},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x04},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x05},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x64},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x10},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x01},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x38},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x08},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x67},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x05},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x10},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x02},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xE0},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x02},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x14},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x0A},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x06},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0x54},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x03},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x98},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x03},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0xC0},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x01},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x01},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_820x616_57fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x05},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x04},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x05},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x06},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0D},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0xD0},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x03},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x34},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x02},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0x68},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x02},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x20},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x00},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x06},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0x68},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x04},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0xD0},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x03},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0xC0},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x01},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x01},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_656x496_57fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x05},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x04},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x05},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x06},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0D},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0xD0},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x02},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x90},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x01},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xF0},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x02},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x27},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x04},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x06},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0x5E},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x04},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0xD0},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x03},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0xC0},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x01},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x01},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_368x304_80fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x05},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x08},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x03},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x88},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x00},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x01},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0x70},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x01},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0x30},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x02},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x20},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x54},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x04},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x05},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xC0},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x02},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x60},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x01},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0xE0},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x02},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x02},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_192x160_80fps[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x05},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030B, 0x08},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0340, 0x03},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x88},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x00},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x00},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0xC0},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x00},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xA0},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x02},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0404, 0x3C},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0409, 0x58},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x02},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x05},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xB8},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x02},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0x62},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0820, 0x01},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0xE0},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0900, 0x02},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x02},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x32F7, 0x01},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_Bin_656x496_30fps_2lane[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0301, 0x01},    /* -/-/-/-/VT_PIX_CLK_DIV[3:0];*/
	{T4K35_8BIT, 0x0303, 0x06},    /* -/-/-/-/VT_SYS_CLK_DIV[3:0];*/
	{T4K35_8BIT, 0x030B, 0x06},    /* -/-/-/-/OP_SYS_CLK_DIV[3:0];*/
	{T4K35_8BIT, 0x0340, 0x05},    /* FR_LENGTH_LINES[15:8];*/
	{T4K35_8BIT, 0x0341, 0x98},    /* FR_LENGTH_LINES[7:0];*/
	{T4K35_8BIT, 0x0342, 0x11},    /* LINE_LENGTH_PCK[15:8];*/
	{T4K35_8BIT, 0x0343, 0x76},    /* LINE_LENGTH_PCK[7:0];*/
	{T4K35_8BIT, 0x0346, 0x00},    /* Y_ADDR_START[15:8];*/
	{T4K35_8BIT, 0x0347, 0x00},    /* Y_ADDR_START[7:0];*/
	{T4K35_8BIT, 0x034A, 0x09},    /* Y_ADDR_END[15:8];*/
	{T4K35_8BIT, 0x034B, 0x9F},    /* Y_ADDR_END[7:0];*/
	{T4K35_8BIT, 0x034C, 0x02},    /* X_OUTPUT_SIZE[15:8];*/
	{T4K35_8BIT, 0x034D, 0x90},    /* X_OUTPUT_SIZE[7:0];*/
	{T4K35_8BIT, 0x034E, 0x01},    /* Y_OUTPUT_SIZE[15:8];*/
	{T4K35_8BIT, 0x034F, 0xF0},    /* Y_OUTPUT_SIZE[7:0];*/
	{T4K35_8BIT, 0x0401, 0x02},    /* -/-/-/-/-/-/SCALING_MODE[1:0];*/
	{T4K35_8BIT, 0x0404, 0x27},    /* SCALE_M[7:0];*/
	{T4K35_8BIT, 0x0409, 0x08},    /* DCROP_XOFS[7:0];*/
	{T4K35_8BIT, 0x040A, 0x00},    /* DCROP_YOFS[15:8];*/
	{T4K35_8BIT, 0x040B, 0x02},    /* DCROP_YOFS[7:0];*/
	{T4K35_8BIT, 0x040C, 0x06},    /* DCROP_WIDTH[15:8];*/
	{T4K35_8BIT, 0x040D, 0x58},    /* DCROP_WIDTH[7:0];*/
	{T4K35_8BIT, 0x040E, 0x04},    /* DCROP_HIGT[15:8];*/
	{T4K35_8BIT, 0x040F, 0xCC},    /* DCROP_HIGT[7:0];*/
	{T4K35_8BIT, 0x0820, 0x01},    /* MSB_LBRATE[31:24];*/
	{T4K35_8BIT, 0x0821, 0x40},    /* MSB_LBRATE[23:16];*/
	{T4K35_8BIT, 0x0900, 0x01},    /* -/-/-/-/-/-/H_BIN[1:0];*/
	{T4K35_8BIT, 0x0901, 0x01},    /* -/-/-/-/-/-/V_BIN_MODE[1:0];*/
	{T4K35_8BIT, 0x0902, 0x00},    /* -/-/-/-/-/-/BINNING_WEIGHTING[1:0];*/
	{T4K35_8BIT, 0x32F7, 0x01},    /* -/-/-/-/-/-/-/PP_DCROP_SW;*/
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_init_settings_1104[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0101, 0x00},
	{T4K35_8BIT, 0x0103, 0x00},
	{T4K35_8BIT, 0x0104, 0x00},
	{T4K35_8BIT, 0x0105, 0x00},
	{T4K35_8BIT, 0x0110, 0x00},
	{T4K35_8BIT, 0x0111, 0x02},
	{T4K35_8BIT, 0x0112, 0x0A},
	{T4K35_8BIT, 0x0113, 0x0A},
	{T4K35_8BIT, 0x0114, 0x03},
	{T4K35_8BIT, 0x0130, 0x13},
	{T4K35_8BIT, 0x0131, 0x33},
	{T4K35_8BIT, 0x0141, 0x00},
	{T4K35_8BIT, 0x0142, 0x00},
	{T4K35_8BIT, 0x0143, 0x00},
	{T4K35_8BIT, 0x0202, 0x09},
	{T4K35_8BIT, 0x0203, 0xB2},
	{T4K35_8BIT, 0x0204, 0x00},
	{T4K35_8BIT, 0x0205, 0x28},
	{T4K35_8BIT, 0x0210, 0x01},
	{T4K35_8BIT, 0x0211, 0x00},
	{T4K35_8BIT, 0x0212, 0x01},
	{T4K35_8BIT, 0x0213, 0x00},
	{T4K35_8BIT, 0x0214, 0x01},
	{T4K35_8BIT, 0x0215, 0x00},
	{T4K35_8BIT, 0x0216, 0x01},
	{T4K35_8BIT, 0x0217, 0x00},
	{T4K35_8BIT, 0x0230, 0x00},
	{T4K35_8BIT, 0x0232, 0x04},
	{T4K35_8BIT, 0x0234, 0x00},
	{T4K35_8BIT, 0x0235, 0x19},
	{T4K35_8BIT, 0x0301, 0x01},
	{T4K35_8BIT, 0x0303, 0x05},
	{T4K35_8BIT, 0x0305, 0x03},
	{T4K35_8BIT, 0x0306, 0x00},
	{T4K35_8BIT, 0x0307, 0x88},
	{T4K35_8BIT, 0x030B, 0x01},
	{T4K35_8BIT, 0x030D, 0x03},
	{T4K35_8BIT, 0x030E, 0x00},
	{T4K35_8BIT, 0x030F, 0x88},
	{T4K35_8BIT, 0x0310, 0x00},
	{T4K35_8BIT, 0x0340, 0x09},
	{T4K35_8BIT, 0x0341, 0xB8},
	{T4K35_8BIT, 0x0342, 0x0D},
	{T4K35_8BIT, 0x0343, 0x9C},
	{T4K35_8BIT, 0x0344, 0x00},
	{T4K35_8BIT, 0x0346, 0x00},
	{T4K35_8BIT, 0x0347, 0x00},
	{T4K35_8BIT, 0x034A, 0x09},
	{T4K35_8BIT, 0x034B, 0x9F},
	{T4K35_8BIT, 0x034C, 0x0C},
	{T4K35_8BIT, 0x034D, 0xD0},
	{T4K35_8BIT, 0x034E, 0x09},
	{T4K35_8BIT, 0x034F, 0xA0},
	{T4K35_8BIT, 0x0401, 0x00},
	{T4K35_8BIT, 0x0403, 0x00},
	{T4K35_8BIT, 0x0404, 0x10},
	{T4K35_8BIT, 0x0408, 0x00},
	{T4K35_8BIT, 0x0409, 0x00},
	{T4K35_8BIT, 0x040A, 0x00},
	{T4K35_8BIT, 0x040B, 0x00},
	{T4K35_8BIT, 0x040C, 0x0C},
	{T4K35_8BIT, 0x040D, 0xD0},
	{T4K35_8BIT, 0x040E, 0x09},
	{T4K35_8BIT, 0x040F, 0xA0},
	{T4K35_8BIT, 0x0601, 0x00},
	{T4K35_8BIT, 0x0602, 0x02},
	{T4K35_8BIT, 0x0603, 0xC0},
	{T4K35_8BIT, 0x0604, 0x02},
	{T4K35_8BIT, 0x0605, 0xC0},
	{T4K35_8BIT, 0x0606, 0x02},
	{T4K35_8BIT, 0x0607, 0xC0},
	{T4K35_8BIT, 0x0608, 0x02},
	{T4K35_8BIT, 0x0609, 0xC0},
	{T4K35_8BIT, 0x060A, 0x00},
	{T4K35_8BIT, 0x060B, 0x00},
	{T4K35_8BIT, 0x060C, 0x00},
	{T4K35_8BIT, 0x060D, 0x00},
	{T4K35_8BIT, 0x060E, 0x00},
	{T4K35_8BIT, 0x060F, 0x00},
	{T4K35_8BIT, 0x0610, 0x00},
	{T4K35_8BIT, 0x0611, 0x00},
	{T4K35_8BIT, 0x0800, 0x88},
	{T4K35_8BIT, 0x0801, 0x38},
	{T4K35_8BIT, 0x0802, 0x78},
	{T4K35_8BIT, 0x0803, 0x48},
	{T4K35_8BIT, 0x0804, 0x48},
	{T4K35_8BIT, 0x0805, 0x40},
	{T4K35_8BIT, 0x0806, 0x00},
	{T4K35_8BIT, 0x0807, 0x48},
	{T4K35_8BIT, 0x0808, 0x01},
	{T4K35_8BIT, 0x0820, 0x0A},
	{T4K35_8BIT, 0x0821, 0x30},
	{T4K35_8BIT, 0x0822, 0x00},
	{T4K35_8BIT, 0x0823, 0x00},
	{T4K35_8BIT, 0x0900, 0x00},
	{T4K35_8BIT, 0x0901, 0x00},
	{T4K35_8BIT, 0x0902, 0x00},
	{T4K35_8BIT, 0x0A05, 0x01},
	{T4K35_8BIT, 0x0A06, 0x01},
	{T4K35_8BIT, 0x0A07, 0x98},
	{T4K35_8BIT, 0x0A0A, 0x01},
	{T4K35_8BIT, 0x0A0B, 0x98},
	{T4K35_8BIT, 0x0C00, 0x00},
	{T4K35_8BIT, 0x0C02, 0x00},
	{T4K35_8BIT, 0x0C04, 0x00},
	{T4K35_8BIT, 0x0C05, 0x32},
	{T4K35_8BIT, 0x0C06, 0x00},
	{T4K35_8BIT, 0x0C07, 0x10},
	{T4K35_8BIT, 0x0C08, 0x00},
	{T4K35_8BIT, 0x0C09, 0x49},
	{T4K35_8BIT, 0x0C0A, 0x01},
	{T4K35_8BIT, 0x0C0B, 0x68},
	{T4K35_8BIT, 0x0C0C, 0x00},
	{T4K35_8BIT, 0x0C0D, 0x34},
	{T4K35_8BIT, 0x0C0E, 0x00},
	{T4K35_8BIT, 0x0C0F, 0x40},
	{T4K35_8BIT, 0x0C12, 0x01},
	{T4K35_8BIT, 0x0C14, 0x00},
	{T4K35_8BIT, 0x0C15, 0x01},
	{T4K35_8BIT, 0x0C16, 0x00},
	{T4K35_8BIT, 0x0C17, 0x20},
	{T4K35_8BIT, 0x0C18, 0x00},
	{T4K35_8BIT, 0x0C19, 0x40},
	{T4K35_8BIT, 0x0C1A, 0x00},
	{T4K35_8BIT, 0x0C1B, 0x00},
	{T4K35_8BIT, 0x0F00, 0x00},
	{T4K35_8BIT, 0x0F01, 0x01},
	{T4K35_8BIT, 0x0F02, 0x01},
	{T4K35_8BIT, 0x0F03, 0x40},
	{T4K35_8BIT, 0x0F04, 0x00},
	{T4K35_8BIT, 0x0F05, 0x40},
	{T4K35_8BIT, 0x0F06, 0x01},
	{T4K35_8BIT, 0x0F07, 0x00},
	{T4K35_8BIT, 0x0F08, 0x01},
	{T4K35_8BIT, 0x0F09, 0x00},
	{T4K35_8BIT, 0x0F0A, 0x01},
	{T4K35_8BIT, 0x0F0B, 0x00},
	{T4K35_8BIT, 0x0F0C, 0x01},
	{T4K35_8BIT, 0x0F0D, 0x00},
	{T4K35_8BIT, 0x0F0E, 0x00},
	{T4K35_8BIT, 0x0F0F, 0x01},
	{T4K35_8BIT, 0x0F10, 0x50},
	{T4K35_8BIT, 0x0F11, 0x00},
	{T4K35_8BIT, 0x0F12, 0x50},
	{T4K35_8BIT, 0x0F13, 0x01},
	{T4K35_8BIT, 0x0F14, 0x00},
	{T4K35_8BIT, 0x0F15, 0x01},
	{T4K35_8BIT, 0x0F16, 0x00},
	{T4K35_8BIT, 0x0F17, 0x01},
	{T4K35_8BIT, 0x0F18, 0x00},
	{T4K35_8BIT, 0x0F19, 0x01},
	{T4K35_8BIT, 0x0F1A, 0x00},
	{T4K35_8BIT, 0x0F1B, 0x00},
	{T4K35_8BIT, 0x0F1C, 0x01},
	{T4K35_8BIT, 0x0F1D, 0x60},
	{T4K35_8BIT, 0x0F1E, 0x00},
	{T4K35_8BIT, 0x0F1F, 0x60},
	{T4K35_8BIT, 0x0F20, 0x01},
	{T4K35_8BIT, 0x0F21, 0x00},
	{T4K35_8BIT, 0x0F22, 0x01},
	{T4K35_8BIT, 0x0F23, 0x00},
	{T4K35_8BIT, 0x0F24, 0x01},
	{T4K35_8BIT, 0x0F25, 0x00},
	{T4K35_8BIT, 0x0F26, 0x01},
	{T4K35_8BIT, 0x0F27, 0x00},
	{T4K35_8BIT, 0x0F28, 0x00},
	{T4K35_8BIT, 0x1101, 0x00},
	{T4K35_8BIT, 0x1143, 0x00},
	{T4K35_8BIT, 0x1202, 0x00},
	{T4K35_8BIT, 0x1203, 0x19},
	{T4K35_8BIT, 0x1204, 0x00},
	{T4K35_8BIT, 0x1205, 0x40},
	{T4K35_8BIT, 0x1210, 0x01},
	{T4K35_8BIT, 0x1211, 0x00},
	{T4K35_8BIT, 0x1212, 0x01},
	{T4K35_8BIT, 0x1213, 0x00},
	{T4K35_8BIT, 0x1214, 0x01},
	{T4K35_8BIT, 0x1215, 0x00},
	{T4K35_8BIT, 0x1216, 0x01},
	{T4K35_8BIT, 0x1217, 0x00},
	{T4K35_8BIT, 0x1230, 0x00},
	{T4K35_8BIT, 0x1232, 0x04},
	{T4K35_8BIT, 0x1234, 0x00},
	{T4K35_8BIT, 0x1235, 0x19},
	{T4K35_8BIT, 0x1340, 0x09},
	{T4K35_8BIT, 0x1341, 0xCE},
	{T4K35_8BIT, 0x1342, 0x0E},
	{T4K35_8BIT, 0x1343, 0x74},
	{T4K35_8BIT, 0x1344, 0x00},
	{T4K35_8BIT, 0x1346, 0x00},
	{T4K35_8BIT, 0x1347, 0x00},
	{T4K35_8BIT, 0x134A, 0x09},
	{T4K35_8BIT, 0x134B, 0x9F},
	{T4K35_8BIT, 0x134C, 0x0C},
	{T4K35_8BIT, 0x134D, 0xD0},
	{T4K35_8BIT, 0x134E, 0x09},
	{T4K35_8BIT, 0x134F, 0xA0},
	{T4K35_8BIT, 0x1401, 0x00},
	{T4K35_8BIT, 0x1403, 0x00},
	{T4K35_8BIT, 0x1404, 0x10},
	{T4K35_8BIT, 0x1408, 0x00},
	{T4K35_8BIT, 0x1409, 0x00},
	{T4K35_8BIT, 0x140A, 0x00},
	{T4K35_8BIT, 0x140B, 0x00},
	{T4K35_8BIT, 0x140C, 0x0C},
	{T4K35_8BIT, 0x140D, 0xD0},
	{T4K35_8BIT, 0x140E, 0x09},
	{T4K35_8BIT, 0x140F, 0xA0},
	{T4K35_8BIT, 0x1601, 0x00},
	{T4K35_8BIT, 0x1602, 0x02},
	{T4K35_8BIT, 0x1603, 0xC0},
	{T4K35_8BIT, 0x1604, 0x02},
	{T4K35_8BIT, 0x1605, 0xC0},
	{T4K35_8BIT, 0x1606, 0x02},
	{T4K35_8BIT, 0x1607, 0xC0},
	{T4K35_8BIT, 0x1608, 0x02},
	{T4K35_8BIT, 0x1609, 0xC0},
	{T4K35_8BIT, 0x160A, 0x00},
	{T4K35_8BIT, 0x160B, 0x00},
	{T4K35_8BIT, 0x160C, 0x00},
	{T4K35_8BIT, 0x160D, 0x00},
	{T4K35_8BIT, 0x160E, 0x00},
	{T4K35_8BIT, 0x160F, 0x00},
	{T4K35_8BIT, 0x1610, 0x00},
	{T4K35_8BIT, 0x1611, 0x00},
	{T4K35_8BIT, 0x1900, 0x00},
	{T4K35_8BIT, 0x1901, 0x00},
	{T4K35_8BIT, 0x1902, 0x00},
	{T4K35_8BIT, 0x300A, 0x00},
	{T4K35_8BIT, 0x301A, 0x44},
	{T4K35_8BIT, 0x301B, 0x44},
	{T4K35_8BIT, 0x3024, 0x00},
	{T4K35_8BIT, 0x3025, 0x65},
	{T4K35_8BIT, 0x3037, 0x06},
	{T4K35_8BIT, 0x3038, 0x06},
	{T4K35_8BIT, 0x3039, 0x06},
	{T4K35_8BIT, 0x303A, 0x06},
	{T4K35_8BIT, 0x303B, 0x0B},
	{T4K35_8BIT, 0x303C, 0x03},
	{T4K35_8BIT, 0x303D, 0x03},
	{T4K35_8BIT, 0x3053, 0xC0},
	{T4K35_8BIT, 0x305D, 0x10},
	{T4K35_8BIT, 0x305E, 0x06},
	{T4K35_8BIT, 0x306B, 0x08},
	{T4K35_8BIT, 0x3073, 0x1C},
	{T4K35_8BIT, 0x3074, 0x0F},
	{T4K35_8BIT, 0x3075, 0x03},
	{T4K35_8BIT, 0x3076, 0x7F},
	{T4K35_8BIT, 0x307E, 0x02},
	{T4K35_8BIT, 0x308D, 0x03},
	{T4K35_8BIT, 0x308E, 0x20},
	{T4K35_8BIT, 0x3091, 0x04},
	{T4K35_8BIT, 0x3096, 0x75},
	{T4K35_8BIT, 0x3097, 0x7E},
	{T4K35_8BIT, 0x3098, 0x20},
	{T4K35_8BIT, 0x30A0, 0x82},
	{T4K35_8BIT, 0x30AB, 0x30},
	{T4K35_8BIT, 0x30CE, 0x60},
	{T4K35_8BIT, 0x30CF, 0x75},
	{T4K35_8BIT, 0x30D2, 0xB3},
	{T4K35_8BIT, 0x30D5, 0x09},
	{T4K35_8BIT, 0x3134, 0x01},
	{T4K35_8BIT, 0x314D, 0x80},
	{T4K35_8BIT, 0x315B, 0x22},
	{T4K35_8BIT, 0x315C, 0x22},
	{T4K35_8BIT, 0x315D, 0x02},
	{T4K35_8BIT, 0x3165, 0x67},
	{T4K35_8BIT, 0x3168, 0xF1},
	{T4K35_8BIT, 0x3169, 0x77},
	{T4K35_8BIT, 0x316A, 0x77},
	{T4K35_8BIT, 0x3173, 0x30},
	{T4K35_8BIT, 0x31B1, 0x40},
	{T4K35_8BIT, 0x31C1, 0x27},
	{T4K35_8BIT, 0x31DB, 0x15},
	{T4K35_8BIT, 0x31DC, 0xE0},
	{T4K35_8BIT, 0x3204, 0x00},
	{T4K35_8BIT, 0x3231, 0x00},
	{T4K35_8BIT, 0x3232, 0x00},
	{T4K35_8BIT, 0x3233, 0x00},
	{T4K35_8BIT, 0x3234, 0x00},
	{T4K35_8BIT, 0x3282, 0xC0},
	{T4K35_8BIT, 0x3284, 0x06},
	{T4K35_8BIT, 0x3285, 0x03},
	{T4K35_8BIT, 0x3286, 0x02},
	{T4K35_8BIT, 0x328A, 0x03},
	{T4K35_8BIT, 0x328B, 0x02},
	{T4K35_8BIT, 0x3290, 0x20},
	{T4K35_8BIT, 0x3294, 0x10},
	{T4K35_8BIT, 0x32A8, 0x84},
	{T4K35_8BIT, 0x32B3, 0x10},
	{T4K35_8BIT, 0x32B4, 0x1F},
	{T4K35_8BIT, 0x32B7, 0x3B},
	{T4K35_8BIT, 0x32BB, 0x0F},
	{T4K35_8BIT, 0x32BC, 0x0F},
	{T4K35_8BIT, 0x32BE, 0x04},
	{T4K35_8BIT, 0x32BF, 0x0F},
	{T4K35_8BIT, 0x32C0, 0x0F},
	{T4K35_8BIT, 0x32C6, 0x50},
	{T4K35_8BIT, 0x32C8, 0x0E},
	{T4K35_8BIT, 0x32C9, 0x0E},
	{T4K35_8BIT, 0x32CA, 0x0E},
	{T4K35_8BIT, 0x32CB, 0x0E},
	{T4K35_8BIT, 0x32CC, 0x0E},
	{T4K35_8BIT, 0x32CD, 0x0E},
	{T4K35_8BIT, 0x32CE, 0x08},
	{T4K35_8BIT, 0x32CF, 0x08},
	{T4K35_8BIT, 0x32D0, 0x08},
	{T4K35_8BIT, 0x32D1, 0x0F},
	{T4K35_8BIT, 0x32D2, 0x0F},
	{T4K35_8BIT, 0x32D3, 0x0F},
	{T4K35_8BIT, 0x32D4, 0x08},
	{T4K35_8BIT, 0x32D5, 0x08},
	{T4K35_8BIT, 0x32D6, 0x08},
	{T4K35_8BIT, 0x32DD, 0x02},
	{T4K35_8BIT, 0x32E0, 0x20},
	{T4K35_8BIT, 0x32E1, 0x20},
	{T4K35_8BIT, 0x32E2, 0x20},
	{T4K35_8BIT, 0x32F7, 0x00},
	{T4K35_8BIT, 0x3307, 0x28},
	{T4K35_8BIT, 0x3308, 0x27},
	{T4K35_8BIT, 0x3309, 0x0D},
	{T4K35_8BIT, 0x3384, 0x10},
	{T4K35_8BIT, 0x3424, 0x00},
	{T4K35_8BIT, 0x3425, 0x78},
	{T4K35_8BIT, 0x3427, 0xC0},
	{T4K35_8BIT, 0x3430, 0xA7},
	{T4K35_8BIT, 0x3431, 0x60},
	{T4K35_8BIT, 0x3432, 0x11},
	GROUPED_PARAMETER_HOLD_DISABLE,
	{T4K35_TOK_TERM, 0, 0}
};

static struct t4k35_reg const t4k35_init_settings_2lane[] = {

	GROUPED_PARAMETER_HOLD_ENABLE,

	{T4K35_8BIT, 0x0101, 0x00},

	{T4K35_8BIT, 0x0103, 0x00},

	{T4K35_8BIT, 0x0104, 0x00},

	{T4K35_8BIT, 0x0105, 0x00},

	{T4K35_8BIT, 0x0110, 0x00},

	{T4K35_8BIT, 0x0111, 0x02},

	{T4K35_8BIT, 0x0112, 0x0A},

	{T4K35_8BIT, 0x0113, 0x0A},

	{T4K35_8BIT, 0x0114, 0x01},

	{T4K35_8BIT, 0x0130, 0x13},

	{T4K35_8BIT, 0x0131, 0x33},

	{T4K35_8BIT, 0x0141, 0x00},

	{T4K35_8BIT, 0x0142, 0x00},

	{T4K35_8BIT, 0x0143, 0x00},

	{T4K35_8BIT, 0x0202, 0x09},

	{T4K35_8BIT, 0x0203, 0xB2},

	{T4K35_8BIT, 0x0204, 0x00},

	{T4K35_8BIT, 0x0205, 0x28},

	{T4K35_8BIT, 0x0210, 0x01},

	{T4K35_8BIT, 0x0211, 0x00},

	{T4K35_8BIT, 0x0212, 0x01},

	{T4K35_8BIT, 0x0213, 0x00},

	{T4K35_8BIT, 0x0214, 0x01},

	{T4K35_8BIT, 0x0215, 0x00},

	{T4K35_8BIT, 0x0216, 0x01},

	{T4K35_8BIT, 0x0217, 0x00},

	{T4K35_8BIT, 0x0230, 0x00},

	{T4K35_8BIT, 0x0232, 0x04},

	{T4K35_8BIT, 0x0234, 0x00},

	{T4K35_8BIT, 0x0235, 0x19},

	{T4K35_8BIT, 0x0301, 0x01},

	{T4K35_8BIT, 0x0303, 0x06},

	{T4K35_8BIT, 0x0305, 0x03},

	{T4K35_8BIT, 0x0306, 0x00},

	{T4K35_8BIT, 0x0307, 0xC8},

	{T4K35_8BIT, 0x030B, 0x01},

	{T4K35_8BIT, 0x030D, 0x03},

	{T4K35_8BIT, 0x030E, 0x00},

	{T4K35_8BIT, 0x030F, 0x78},

	{T4K35_8BIT, 0x0310, 0x00},

	{T4K35_8BIT, 0x0340, 0x09},

	{T4K35_8BIT, 0x0341, 0xB8},

	{T4K35_8BIT, 0x0342, 0x0D},

	{T4K35_8BIT, 0x0343, 0x9C},

	{T4K35_8BIT, 0x0344, 0x00},

	{T4K35_8BIT, 0x0346, 0x00},

	{T4K35_8BIT, 0x0347, 0x00},

	{T4K35_8BIT, 0x034A, 0x09},

	{T4K35_8BIT, 0x034B, 0x9F},

	{T4K35_8BIT, 0x034C, 0x0C},

	{T4K35_8BIT, 0x034D, 0xD0},

	{T4K35_8BIT, 0x034E, 0x09},

	{T4K35_8BIT, 0x034F, 0xA0},

	{T4K35_8BIT, 0x0401, 0x00},

	{T4K35_8BIT, 0x0403, 0x00},

	{T4K35_8BIT, 0x0404, 0x10},

	{T4K35_8BIT, 0x0408, 0x00},

	{T4K35_8BIT, 0x0409, 0x00},

	{T4K35_8BIT, 0x040A, 0x00},

	{T4K35_8BIT, 0x040B, 0x00},

	{T4K35_8BIT, 0x040C, 0x0C},

	{T4K35_8BIT, 0x040D, 0xD0},

	{T4K35_8BIT, 0x040E, 0x09},

	{T4K35_8BIT, 0x040F, 0xA0},

	{T4K35_8BIT, 0x0601, 0x00},

	{T4K35_8BIT, 0x0602, 0x02},

	{T4K35_8BIT, 0x0603, 0xC0},

	{T4K35_8BIT, 0x0604, 0x02},

	{T4K35_8BIT, 0x0605, 0xC0},

	{T4K35_8BIT, 0x0606, 0x02},

	{T4K35_8BIT, 0x0607, 0xC0},

	{T4K35_8BIT, 0x0608, 0x02},

	{T4K35_8BIT, 0x0609, 0xC0},

	{T4K35_8BIT, 0x060A, 0x00},

	{T4K35_8BIT, 0x060B, 0x00},

	{T4K35_8BIT, 0x060C, 0x00},

	{T4K35_8BIT, 0x060D, 0x00},

	{T4K35_8BIT, 0x060E, 0x00},

	{T4K35_8BIT, 0x060F, 0x00},

	{T4K35_8BIT, 0x0610, 0x00},

	{T4K35_8BIT, 0x0611, 0x00},

	{T4K35_8BIT, 0x0800, 0x88},

	{T4K35_8BIT, 0x0801, 0x38},

	{T4K35_8BIT, 0x0802, 0x78},

	{T4K35_8BIT, 0x0803, 0x48},

	{T4K35_8BIT, 0x0804, 0x48},

	{T4K35_8BIT, 0x0805, 0x40},

	{T4K35_8BIT, 0x0806, 0x00},

	{T4K35_8BIT, 0x0807, 0x48},

	{T4K35_8BIT, 0x0808, 0x01},

	{T4K35_8BIT, 0x0820, 0x0A},

	{T4K35_8BIT, 0x0821, 0x30},

	{T4K35_8BIT, 0x0822, 0x00},

	{T4K35_8BIT, 0x0823, 0x00},

	{T4K35_8BIT, 0x0900, 0x00},

	{T4K35_8BIT, 0x0901, 0x00},

	{T4K35_8BIT, 0x0902, 0x00},

	{T4K35_8BIT, 0x0A05, 0x01},

	{T4K35_8BIT, 0x0A06, 0x01},

	{T4K35_8BIT, 0x0A07, 0x98},

	{T4K35_8BIT, 0x0A0A, 0x01},

	{T4K35_8BIT, 0x0A0B, 0x98},

	{T4K35_8BIT, 0x0C00, 0x00},

	{T4K35_8BIT, 0x0C02, 0x00},

	{T4K35_8BIT, 0x0C04, 0x00},

	{T4K35_8BIT, 0x0C05, 0x32},

	{T4K35_8BIT, 0x0C06, 0x00},

	{T4K35_8BIT, 0x0C07, 0x10},

	{T4K35_8BIT, 0x0C08, 0x00},

	{T4K35_8BIT, 0x0C09, 0x49},

	{T4K35_8BIT, 0x0C0A, 0x01},

	{T4K35_8BIT, 0x0C0B, 0x68},

	{T4K35_8BIT, 0x0C0C, 0x00},

	{T4K35_8BIT, 0x0C0D, 0x34},

	{T4K35_8BIT, 0x0C0E, 0x00},

	{T4K35_8BIT, 0x0C0F, 0x40},

	{T4K35_8BIT, 0x0C12, 0x01},

	{T4K35_8BIT, 0x0C14, 0x00},

	{T4K35_8BIT, 0x0C15, 0x01},

	{T4K35_8BIT, 0x0C16, 0x00},

	{T4K35_8BIT, 0x0C17, 0x20},

	{T4K35_8BIT, 0x0C18, 0x00},

	{T4K35_8BIT, 0x0C19, 0x40},

	{T4K35_8BIT, 0x0C1A, 0x00},

	{T4K35_8BIT, 0x0C1B, 0x00},

	{T4K35_8BIT, 0x0F00, 0x00},

	{T4K35_8BIT, 0x0F01, 0x01},

	{T4K35_8BIT, 0x0F02, 0x01},

	{T4K35_8BIT, 0x0F03, 0x40},

	{T4K35_8BIT, 0x0F04, 0x00},

	{T4K35_8BIT, 0x0F05, 0x40},

	{T4K35_8BIT, 0x0F06, 0x01},

	{T4K35_8BIT, 0x0F07, 0x00},

	{T4K35_8BIT, 0x0F08, 0x01},

	{T4K35_8BIT, 0x0F09, 0x00},

	{T4K35_8BIT, 0x0F0A, 0x01},

	{T4K35_8BIT, 0x0F0B, 0x00},

	{T4K35_8BIT, 0x0F0C, 0x01},

	{T4K35_8BIT, 0x0F0D, 0x00},

	{T4K35_8BIT, 0x0F0E, 0x00},

	{T4K35_8BIT, 0x0F0F, 0x01},

	{T4K35_8BIT, 0x0F10, 0x50},

	{T4K35_8BIT, 0x0F11, 0x00},

	{T4K35_8BIT, 0x0F12, 0x50},

	{T4K35_8BIT, 0x0F13, 0x01},

	{T4K35_8BIT, 0x0F14, 0x00},

	{T4K35_8BIT, 0x0F15, 0x01},

	{T4K35_8BIT, 0x0F16, 0x00},

	{T4K35_8BIT, 0x0F17, 0x01},

	{T4K35_8BIT, 0x0F18, 0x00},

	{T4K35_8BIT, 0x0F19, 0x01},

	{T4K35_8BIT, 0x0F1A, 0x00},

	{T4K35_8BIT, 0x0F1B, 0x00},

	{T4K35_8BIT, 0x0F1C, 0x01},

	{T4K35_8BIT, 0x0F1D, 0x60},

	{T4K35_8BIT, 0x0F1E, 0x00},

	{T4K35_8BIT, 0x0F1F, 0x60},

	{T4K35_8BIT, 0x0F20, 0x01},

	{T4K35_8BIT, 0x0F21, 0x00},

	{T4K35_8BIT, 0x0F22, 0x01},

	{T4K35_8BIT, 0x0F23, 0x00},

	{T4K35_8BIT, 0x0F24, 0x01},

	{T4K35_8BIT, 0x0F25, 0x00},

	{T4K35_8BIT, 0x0F26, 0x01},

	{T4K35_8BIT, 0x0F27, 0x00},

	{T4K35_8BIT, 0x0F28, 0x00},

	{T4K35_8BIT, 0x1101, 0x00},

	{T4K35_8BIT, 0x1143, 0x00},

	{T4K35_8BIT, 0x1202, 0x00},

	{T4K35_8BIT, 0x1203, 0x19},

	{T4K35_8BIT, 0x1204, 0x00},

	{T4K35_8BIT, 0x1205, 0x40},

	{T4K35_8BIT, 0x1210, 0x01},

	{T4K35_8BIT, 0x1211, 0x00},

	{T4K35_8BIT, 0x1212, 0x01},

	{T4K35_8BIT, 0x1213, 0x00},

	{T4K35_8BIT, 0x1214, 0x01},

	{T4K35_8BIT, 0x1215, 0x00},

	{T4K35_8BIT, 0x1216, 0x01},

	{T4K35_8BIT, 0x1217, 0x00},

	{T4K35_8BIT, 0x1230, 0x00},

	{T4K35_8BIT, 0x1232, 0x04},

	{T4K35_8BIT, 0x1234, 0x00},

	{T4K35_8BIT, 0x1235, 0x19},

	{T4K35_8BIT, 0x1340, 0x09},

	{T4K35_8BIT, 0x1341, 0xCE},

	{T4K35_8BIT, 0x1342, 0x0E},

	{T4K35_8BIT, 0x1343, 0x74},

	{T4K35_8BIT, 0x1344, 0x00},

	{T4K35_8BIT, 0x1346, 0x00},

	{T4K35_8BIT, 0x1347, 0x00},

	{T4K35_8BIT, 0x134A, 0x09},

	{T4K35_8BIT, 0x134B, 0x9F},

	{T4K35_8BIT, 0x134C, 0x0C},

	{T4K35_8BIT, 0x134D, 0xD0},

	{T4K35_8BIT, 0x134E, 0x09},

	{T4K35_8BIT, 0x134F, 0xA0},

	{T4K35_8BIT, 0x1401, 0x00},

	{T4K35_8BIT, 0x1403, 0x00},

	{T4K35_8BIT, 0x1404, 0x10},

	{T4K35_8BIT, 0x1408, 0x00},

	{T4K35_8BIT, 0x1409, 0x00},

	{T4K35_8BIT, 0x140A, 0x00},

	{T4K35_8BIT, 0x140B, 0x00},

	{T4K35_8BIT, 0x140C, 0x0C},

	{T4K35_8BIT, 0x140D, 0xD0},

	{T4K35_8BIT, 0x140E, 0x09},

	{T4K35_8BIT, 0x140F, 0xA0},

	{T4K35_8BIT, 0x1601, 0x00},

	{T4K35_8BIT, 0x1602, 0x02},

	{T4K35_8BIT, 0x1603, 0xC0},

	{T4K35_8BIT, 0x1604, 0x02},

	{T4K35_8BIT, 0x1605, 0xC0},

	{T4K35_8BIT, 0x1606, 0x02},

	{T4K35_8BIT, 0x1607, 0xC0},

	{T4K35_8BIT, 0x1608, 0x02},

	{T4K35_8BIT, 0x1609, 0xC0},

	{T4K35_8BIT, 0x160A, 0x00},

	{T4K35_8BIT, 0x160B, 0x00},

	{T4K35_8BIT, 0x160C, 0x00},

	{T4K35_8BIT, 0x160D, 0x00},

	{T4K35_8BIT, 0x160E, 0x00},

	{T4K35_8BIT, 0x160F, 0x00},

	{T4K35_8BIT, 0x1610, 0x00},

	{T4K35_8BIT, 0x1611, 0x00},

	{T4K35_8BIT, 0x1900, 0x00},

	{T4K35_8BIT, 0x1901, 0x00},

	{T4K35_8BIT, 0x1902, 0x00},

	{T4K35_8BIT, 0x300A, 0x00},

	{T4K35_8BIT, 0x301A, 0x44},

	{T4K35_8BIT, 0x301B, 0x44},

	{T4K35_8BIT, 0x3024, 0x00},

	{T4K35_8BIT, 0x3025, 0x65},

	{T4K35_8BIT, 0x3037, 0x06},

	{T4K35_8BIT, 0x3038, 0x06},

	{T4K35_8BIT, 0x3039, 0x06},

	{T4K35_8BIT, 0x303A, 0x06},

	{T4K35_8BIT, 0x303B, 0x0B},

	{T4K35_8BIT, 0x303C, 0x03},

	{T4K35_8BIT, 0x303D, 0x03},

	{T4K35_8BIT, 0x3053, 0xC0},

	{T4K35_8BIT, 0x305D, 0x10},

	{T4K35_8BIT, 0x305E, 0x06},

	{T4K35_8BIT, 0x306B, 0x08},

	{T4K35_8BIT, 0x3073, 0x1C},

	{T4K35_8BIT, 0x3074, 0x0F},

	{T4K35_8BIT, 0x3075, 0x03},

	{T4K35_8BIT, 0x3076, 0x7F},

	{T4K35_8BIT, 0x307E, 0x02},

	{T4K35_8BIT, 0x308D, 0x03},

	{T4K35_8BIT, 0x308E, 0x20},

	{T4K35_8BIT, 0x3091, 0x04},

	{T4K35_8BIT, 0x3096, 0x75},

	{T4K35_8BIT, 0x3097, 0x7E},

	{T4K35_8BIT, 0x3098, 0x20},

	{T4K35_8BIT, 0x30A0, 0x82},

	{T4K35_8BIT, 0x30AB, 0x30},

	{T4K35_8BIT, 0x30CE, 0x60},

	{T4K35_8BIT, 0x30CF, 0x75},

	{T4K35_8BIT, 0x30D2, 0xB3},

	{T4K35_8BIT, 0x30D5, 0x09},

	{T4K35_8BIT, 0x3134, 0x01},

	{T4K35_8BIT, 0x314D, 0x80},

	{T4K35_8BIT, 0x315B, 0x22},

	{T4K35_8BIT, 0x315C, 0x22},

	{T4K35_8BIT, 0x315D, 0x02},

	{T4K35_8BIT, 0x3165, 0x67},

	{T4K35_8BIT, 0x3168, 0xF1},

	{T4K35_8BIT, 0x3169, 0x77},

	{T4K35_8BIT, 0x316A, 0x77},

	{T4K35_8BIT, 0x3173, 0x30},

	{T4K35_8BIT, 0x31B1, 0x40},

	{T4K35_8BIT, 0x31C1, 0x27},

	{T4K35_8BIT, 0x31DB, 0x15},

	{T4K35_8BIT, 0x31DC, 0xE0},

	{T4K35_8BIT, 0x3204, 0x00},

	{T4K35_8BIT, 0x3231, 0x00},

	{T4K35_8BIT, 0x3232, 0x00},

	{T4K35_8BIT, 0x3233, 0x00},

	{T4K35_8BIT, 0x3234, 0x00},

	{T4K35_8BIT, 0x3282, 0xC0},

	{T4K35_8BIT, 0x3284, 0x06},

	{T4K35_8BIT, 0x3285, 0x03},

	{T4K35_8BIT, 0x3286, 0x02},

	{T4K35_8BIT, 0x328A, 0x03},

	{T4K35_8BIT, 0x328B, 0x02},

	{T4K35_8BIT, 0x3290, 0x20},

	{T4K35_8BIT, 0x3294, 0x10},

	{T4K35_8BIT, 0x32A8, 0x84},

	{T4K35_8BIT, 0x32B3, 0x10},

	{T4K35_8BIT, 0x32B4, 0x1F},

	{T4K35_8BIT, 0x32B7, 0x3B},

	{T4K35_8BIT, 0x32BB, 0x0F},

	{T4K35_8BIT, 0x32BC, 0x0F},

	{T4K35_8BIT, 0x32BE, 0x04},

	{T4K35_8BIT, 0x32BF, 0x0F},

	{T4K35_8BIT, 0x32C0, 0x0F},

	{T4K35_8BIT, 0x32C6, 0x50},

	{T4K35_8BIT, 0x32C8, 0x0E},

	{T4K35_8BIT, 0x32C9, 0x0E},

	{T4K35_8BIT, 0x32CA, 0x0E},

	{T4K35_8BIT, 0x32CB, 0x0E},

	{T4K35_8BIT, 0x32CC, 0x0E},

	{T4K35_8BIT, 0x32CD, 0x0E},

	{T4K35_8BIT, 0x32CE, 0x08},

	{T4K35_8BIT, 0x32CF, 0x08},

	{T4K35_8BIT, 0x32D0, 0x08},

	{T4K35_8BIT, 0x32D1, 0x0F},

	{T4K35_8BIT, 0x32D2, 0x0F},

	{T4K35_8BIT, 0x32D3, 0x0F},

	{T4K35_8BIT, 0x32D4, 0x08},

	{T4K35_8BIT, 0x32D5, 0x08},

	{T4K35_8BIT, 0x32D6, 0x08},

	{T4K35_8BIT, 0x32DD, 0x02},

	{T4K35_8BIT, 0x32E0, 0x20},

	{T4K35_8BIT, 0x32E1, 0x20},

	{T4K35_8BIT, 0x32E2, 0x20},

	{T4K35_8BIT, 0x32F7, 0x00},

	{T4K35_8BIT, 0x3307, 0x28},

	{T4K35_8BIT, 0x3308, 0x27},

	{T4K35_8BIT, 0x3309, 0x0D},

	{T4K35_8BIT, 0x3384, 0x10},

	{T4K35_8BIT, 0x3424, 0x00},

	{T4K35_8BIT, 0x3425, 0x78},

	{T4K35_8BIT, 0x3427, 0xC0},

	{T4K35_8BIT, 0x3430, 0xA7},

	{T4K35_8BIT, 0x3431, 0x60},

	{T4K35_8BIT, 0x3432, 0x11},

	GROUPED_PARAMETER_HOLD_DISABLE,

	{T4K35_TOK_TERM, 0, 0}

};



static struct t4k35_reg const t4k35_init_settings[] = {
	GROUPED_PARAMETER_HOLD_ENABLE,
	{T4K35_8BIT, 0x0101, 0x00},    // -/-/-/-/-/-/IMAGE_ORIENT[1:0];
	{T4K35_8BIT, 0x0103, 0x00},    // -/-/-/-/-/-/MIPI_RST/SOFTWARE_RESET;
	{T4K35_8BIT, 0x0105, 0x00},    // -/-/-/-/-/-/-/MSK_CORRUPT_FR;
	{T4K35_8BIT, 0x0110, 0x00},    // -/-/-/-/-/CSI_CHAN_IDNTF[2:0];
	{T4K35_8BIT, 0x0111, 0x02},    // -/-/-/-/-/-/CSI_SIGNAL_MOD[1:0];
	{T4K35_8BIT, 0x0112, 0x0A},    // CSI_DATA_FORMAT[15:8];
	{T4K35_8BIT, 0x0113, 0x0A},    // CSI_DATA_FORMAT[7:0];
	{T4K35_8BIT, 0x0114, 0x03},    // -/-/-/-/-/-/CSI_LANE_MODE[1:0];
	{T4K35_8BIT, 0x0130, 0x13},    // EXTCLK_FRQ_MHZ[15:8];
	{T4K35_8BIT, 0x0131, 0x33},    // EXTCLK_FRQ_MHZ[7:0];
	{T4K35_8BIT, 0x0141, 0x00},    // -/-/-/-/-/cont_select_1B/CTX_SW_CTL/R_CONT_STATUS;
	{T4K35_8BIT, 0x0142, 0x00},    // -/-/-/-/CONT_MDSEL_FRVAL[1:0]/CONT_FRCNT_MSK/CONT_GRHOLD_MSK;
	{T4K35_8BIT, 0x0143, 0x00},    // R_FRAME_COUNT[7:0];
	{T4K35_8BIT, 0x0202, 0x09},    // COAR_INTEGR_TIM[15:8];
	{T4K35_8BIT, 0x0203, 0xB2},    // COAR_INTEGR_TIM[7:0];
	{T4K35_8BIT, 0x0204, 0x00},    // -/-/-/-/ANA_GA_CODE_GL[11:8];
	{T4K35_8BIT, 0x0205, 0x28},    // ANA_GA_CODE_GL[7:0];
	{T4K35_8BIT, 0x0210, 0x01},    // -/-/-/-/-/-/DG_GA_GREENR[9:8];
	{T4K35_8BIT, 0x0211, 0x00},    // DG_GA_GREENR[7:0];
	{T4K35_8BIT, 0x0212, 0x01},    // -/-/-/-/-/-/DG_GA_RED[9:8];
	{T4K35_8BIT, 0x0213, 0x00},    // DG_GA_RED[7:0];
	{T4K35_8BIT, 0x0214, 0x01},    // -/-/-/-/-/-/DG_GA_BLUE[9:8];
	{T4K35_8BIT, 0x0215, 0x00},    // DG_GA_BLUE[7:0];
	{T4K35_8BIT, 0x0216, 0x01},    // -/-/-/-/-/-/DG_GA_GREENB[9:8];
	{T4K35_8BIT, 0x0217, 0x00},    // DG_GA_GREENB[7:0];
	{T4K35_8BIT, 0x0230, 0x00},    // -/-/-/HDR_MODE[4:0];
	{T4K35_8BIT, 0x0232, 0x04},    // HDR_RATIO_1[7:0];
	{T4K35_8BIT, 0x0234, 0x00},    // HDR_SHT_INTEGR_TIM[15:8];
	{T4K35_8BIT, 0x0235, 0x19},    // HDR_SHT_INTEGR_TIM[7:0];
	{T4K35_8BIT, 0x0301, 0x01},    // -/-/-/-/VT_PIX_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0303, 0x06},    // -/-/-/-/VT_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x0305, 0x03},    // -/-/-/-/-/PRE_PLL_CLK_DIV[2:0];
	{T4K35_8BIT, 0x0306, 0x00},    // -/-/-/-/-/-/-/PLL_MULTIPLIER[8];
	{T4K35_8BIT, 0x0307, 0xC8},    // PLL_MULTIPLIER[7:0];
	{T4K35_8BIT, 0x030B, 0x04},    // -/-/-/-/OP_SYS_CLK_DIV[3:0];
	{T4K35_8BIT, 0x030D, 0x03},    // -/-/-/-/-/PRE_PLL_ST_CLK_DIV[2:0];
	{T4K35_8BIT, 0x030E, 0x00},    // -/-/-/-/-/-/-/PLL_MULT_ST[8];
	{T4K35_8BIT, 0x030F, 0x87},    // PLL_MULT_ST[7:0];
	{T4K35_8BIT, 0x0310, 0x00},    // -/-/-/-/-/-/-/OPCK_PLLSEL;
	{T4K35_8BIT, 0x0340, 0x07},    // FR_LENGTH_LINES[15:8];
	{T4K35_8BIT, 0x0341, 0x50},    // FR_LENGTH_LINES[7:0];
	{T4K35_8BIT, 0x0342, 0x0E},    // LINE_LENGTH_PCK[15:8];
	{T4K35_8BIT, 0x0343, 0x50},    // LINE_LENGTH_PCK[7:0];
	{T4K35_8BIT, 0x0344, 0x00},    // -/-/-/-/H_CROP[3:0];
	{T4K35_8BIT, 0x0346, 0x00},    // Y_ADDR_START[15:8];
	{T4K35_8BIT, 0x0347, 0x00},    // Y_ADDR_START[7:0];
	{T4K35_8BIT, 0x034A, 0x09},    // Y_ADDR_END[15:8];
	{T4K35_8BIT, 0x034B, 0x9F},    // Y_ADDR_END[7:0];
	{T4K35_8BIT, 0x034C, 0x0C},    // X_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034D, 0xD0},    // X_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x034E, 0x09},    // Y_OUTPUT_SIZE[15:8];
	{T4K35_8BIT, 0x034F, 0xA0},    // Y_OUTPUT_SIZE[7:0];
	{T4K35_8BIT, 0x0401, 0x00},    // -/-/-/-/-/-/SCALING_MODE[1:0];
	{T4K35_8BIT, 0x0403, 0x00},    // -/-/-/-/-/-/SPATIAL_SAMPLING[1:0];
	{T4K35_8BIT, 0x0404, 0x10},    // SCALE_M[7:0];
	{T4K35_8BIT, 0x0408, 0x00},    // DCROP_XOFS[15:8];
	{T4K35_8BIT, 0x0409, 0x00},    // DCROP_XOFS[7:0];
	{T4K35_8BIT, 0x040A, 0x00},    // DCROP_YOFS[15:8];
	{T4K35_8BIT, 0x040B, 0x00},    // DCROP_YOFS[7:0];
	{T4K35_8BIT, 0x040C, 0x0C},    // DCROP_WIDTH[15:8];
	{T4K35_8BIT, 0x040D, 0xD0},    // DCROP_WIDTH[7:0];
	{T4K35_8BIT, 0x040E, 0x09},    // DCROP_HIGT[15:8];
	{T4K35_8BIT, 0x040F, 0xA0},    // DCROP_HIGT[7:0];
	{T4K35_8BIT, 0x0601, 0x00},    // TEST_PATT_MODE[7:0];
	{T4K35_8BIT, 0x0602, 0x02},    // -/-/-/-/-/-/TEST_DATA_RED[9:8];
	{T4K35_8BIT, 0x0603, 0xC0},    // TEST_DATA_RED[7:0];
	{T4K35_8BIT, 0x0604, 0x02},    // -/-/-/-/-/-/TEST_DATA_GREENR[9:8];
	{T4K35_8BIT, 0x0605, 0xC0},    // TEST_DATA_GREENR[7:0];
	{T4K35_8BIT, 0x0606, 0x02},    // -/-/-/-/-/-/TEST_DATA_BLUE[9:8];
	{T4K35_8BIT, 0x0607, 0xC0},    // TEST_DATA_BLUE[7:0];
	{T4K35_8BIT, 0x0608, 0x02},    // -/-/-/-/-/-/TEST_DATA_GREENB[9:8];
	{T4K35_8BIT, 0x0609, 0xC0},    // TEST_DATA_GREENB[7:0];
	{T4K35_8BIT, 0x060A, 0x00},    // HO_CURS_WIDTH[15:8];
	{T4K35_8BIT, 0x060B, 0x00},    // HO_CURS_WIDTH[7:0];
	{T4K35_8BIT, 0x060C, 0x00},    // HO_CURS_POSITION[15:8];
	{T4K35_8BIT, 0x060D, 0x00},    // HO_CURS_POSITION[7:0];
	{T4K35_8BIT, 0x060E, 0x00},    // VE_CURS_WIDTH[15:8];
	{T4K35_8BIT, 0x060F, 0x00},    // VE_CURS_WIDTH[7:0];
	{T4K35_8BIT, 0x0610, 0x00},    // VE_CURS_POSITION[15:8];
	{T4K35_8BIT, 0x0611, 0x00},    // VE_CURS_POSITION[7:0];
	{T4K35_8BIT, 0x0800, 0x88},    // TCLK_POST[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0801, 0x38},    // THS_PREPARE[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0802, 0x78},    // THS_ZERO[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0803, 0x48},    // THS_TRAIL[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0804, 0x48},    // TCLK_TRAIL[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0805, 0x40},    // TCLK_PREPARE[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0806, 0x00},    // TCLK_ZERO[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0807, 0x48},    // TLPX[7:3]/-/-/-/;
	{T4K35_8BIT, 0x0808, 0x01},    // -/-/-/-/-/-/DPHY_CTRL[1:0];
	{T4K35_8BIT, 0x0820, 0x03},    // MSB_LBRATE[31:24];
	{T4K35_8BIT, 0x0821, 0xC0},    // MSB_LBRATE[23:16];
	{T4K35_8BIT, 0x0822, 0x00},    // MSB_LBRATE[15:8];
	{T4K35_8BIT, 0x0823, 0x00},    // MSB_LBRATE[7:0];
	{T4K35_8BIT, 0x0900, 0x00},    // -/-/-/-/-/-/H_BIN[1:0];
	{T4K35_8BIT, 0x0901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE[1:0];
	{T4K35_8BIT, 0x0902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING[1:0];
	{T4K35_8BIT, 0x0A05, 0x01},    // -/-/-/-/-/-/-/MAP_DEF_EN;
	{T4K35_8BIT, 0x0A06, 0x01},    // -/-/-/-/-/-/-/SGL_DEF_EN;
	{T4K35_8BIT, 0x0A07, 0x98},    // SGL_DEF_W[7:0];
	{T4K35_8BIT, 0x0A0A, 0x01},    // -/-/-/-/-/-/-/COMB_CPLT_SGL_DEF_EN;
	{T4K35_8BIT, 0x0A0B, 0x98},    // COMB_CPLT_SGL_DEF_W[7:0];
	{T4K35_8BIT, 0x0C00, 0x00},    // -/-/-/-/-/-/GLBL_RST_CTRL1[1:0];
	{T4K35_8BIT, 0x0C02, 0x00},    // GLBL_RST_CFG_1[7:0];
	{T4K35_8BIT, 0x0C04, 0x00},    // TRDY_CTRL[15:8];
	{T4K35_8BIT, 0x0C05, 0x32},    // TRDY_CTRL[7:0];
	{T4K35_8BIT, 0x0C06, 0x00},    // TRDOUT_CTRL[15:8];
	{T4K35_8BIT, 0x0C07, 0x10},    // TRDOUT_CTRL[7:0];
	{T4K35_8BIT, 0x0C08, 0x00},    // TSHT_STB_DLY_CTRL[15:8];
	{T4K35_8BIT, 0x0C09, 0x49},    // TSHT_STB_DLY_CTRL[7:0];
	{T4K35_8BIT, 0x0C0A, 0x01},    // TSHT_STB_WDTH_CTRL[15:8];
	{T4K35_8BIT, 0x0C0B, 0x68},    // TSHT_STB_WDTH_CTRL[7:0];
	{T4K35_8BIT, 0x0C0C, 0x00},    // TFLSH_STB_DLY_CTRL[15:8];
	{T4K35_8BIT, 0x0C0D, 0x34},    // TFLSH_STB_DLY_CTRL[7:0];
	{T4K35_8BIT, 0x0C0E, 0x00},    // TFLSH_STB_WDTH_CTRL[15:8];
	{T4K35_8BIT, 0x0C0F, 0x40},    // TFLSH_STB_WDTH_CTRL[7:0];
	{T4K35_8BIT, 0x0C12, 0x01},    // FLASH_ADJ[7:0];
	{T4K35_8BIT, 0x0C14, 0x00},    // FLASH_LINE[15:8];
	{T4K35_8BIT, 0x0C15, 0x01},    // FLASH_LINE[7:0];
	{T4K35_8BIT, 0x0C16, 0x00},    // FLASH_DELAY[15:8];
	{T4K35_8BIT, 0x0C17, 0x20},    // FLASH_DELAY[7:0];
	{T4K35_8BIT, 0x0C18, 0x00},    // FLASH_WIDTH[15:8];
	{T4K35_8BIT, 0x0C19, 0x40},    // FLASH_WIDTH[7:0];
	{T4K35_8BIT, 0x0C1A, 0x00},    // -/-/FLASH_MODE[5:0];
	{T4K35_8BIT, 0x0C1B, 0x00},    // -/-/-/-/-/-/-/FLASH_TRG;
	{T4K35_8BIT, 0x0F00, 0x00},    // -/-/-/-/-/ABF_LUT_CTL[2:0];
	{T4K35_8BIT, 0x0F01, 0x01},    // -/-/-/-/-/-/ABF_LUT_MODE[1:0];
	{T4K35_8BIT, 0x0F02, 0x01},    // ABF_ES_A[15:8];
	{T4K35_8BIT, 0x0F03, 0x40},    // ABF_ES_A[7:0];
	{T4K35_8BIT, 0x0F04, 0x00},    // -/-/-/-/ABF_AG_A[11:8];
	{T4K35_8BIT, 0x0F05, 0x40},    // ABF_AG_A[7:0];
	{T4K35_8BIT, 0x0F06, 0x01},    // -/-/-/-/-/-/-/ABF_DG_GR_A[8];
	{T4K35_8BIT, 0x0F07, 0x00},    // ABF_DG_GR_A[7:0];
	{T4K35_8BIT, 0x0F08, 0x01},    // -/-/-/-/-/-/-/ABF_DG_R_A[8];
	{T4K35_8BIT, 0x0F09, 0x00},    // ABF_DG_R_A[7:0];
	{T4K35_8BIT, 0x0F0A, 0x01},    // -/-/-/-/-/-/-/ABF_DG_B_A[8];
	{T4K35_8BIT, 0x0F0B, 0x00},    // ABF_DG_B_A[7:0];
	{T4K35_8BIT, 0x0F0C, 0x01},    // -/-/-/-/-/-/-/ABF_DG_GB_A[8];
	{T4K35_8BIT, 0x0F0D, 0x00},    // ABF_DG_GB_A[7:0];
	{T4K35_8BIT, 0x0F0E, 0x00},    // -/-/-/-/-/-/-/F_ENTRY_A;
	{T4K35_8BIT, 0x0F0F, 0x01},    // ABF_ES_B[15:8];
	{T4K35_8BIT, 0x0F10, 0x50},    // ABF_ES_B[7:0];
	{T4K35_8BIT, 0x0F11, 0x00},    // -/-/-/-/ABF_AG_B[11:8];
	{T4K35_8BIT, 0x0F12, 0x50},    // ABF_AG_B[7:0];
	{T4K35_8BIT, 0x0F13, 0x01},    // -/-/-/-/-/-/-/ABF_DG_GR_B[8];
	{T4K35_8BIT, 0x0F14, 0x00},    // ABF_DG_GR_B[7:0];
	{T4K35_8BIT, 0x0F15, 0x01},    // -/-/-/-/-/-/-/ABF_DG_R_B[8];
	{T4K35_8BIT, 0x0F16, 0x00},    // ABF_DG_R_B[7:0];
	{T4K35_8BIT, 0x0F17, 0x01},    // -/-/-/-/-/-/-/ABF_DG_B_B[8];
	{T4K35_8BIT, 0x0F18, 0x00},    // ABF_DG_B_B[7:0];
	{T4K35_8BIT, 0x0F19, 0x01},    // -/-/-/-/-/-/-/ABF_DG_GB_B[8];
	{T4K35_8BIT, 0x0F1A, 0x00},    // ABF_DG_GB_B[7:0];
	{T4K35_8BIT, 0x0F1B, 0x00},    // -/-/-/-/-/-/-/F_ENTRY_B;
	{T4K35_8BIT, 0x0F1C, 0x01},    // ABF_ES_C[15:8];
	{T4K35_8BIT, 0x0F1D, 0x60},    // ABF_ES_C[7:0];
	{T4K35_8BIT, 0x0F1E, 0x00},    // -/-/-/-/ABF_AG_C[11:8];
	{T4K35_8BIT, 0x0F1F, 0x60},    // ABF_AG_C[7:0];
	{T4K35_8BIT, 0x0F20, 0x01},    // -/-/-/-/-/-/-/ABF_DG_GR_C[8];
	{T4K35_8BIT, 0x0F21, 0x00},    // ABF_DG_GR_C[7:0];
	{T4K35_8BIT, 0x0F22, 0x01},    // -/-/-/-/-/-/-/ABF_DG_R_C[8];
	{T4K35_8BIT, 0x0F23, 0x00},    // ABF_DG_R_C[7:0];
	{T4K35_8BIT, 0x0F24, 0x01},    // -/-/-/-/-/-/-/ABF_DG_B_C[8];
	{T4K35_8BIT, 0x0F25, 0x00},    // ABF_DG_B_C[7:0];
	{T4K35_8BIT, 0x0F26, 0x01},    // -/-/-/-/-/-/-/ABF_DG_GB_C[8];
	{T4K35_8BIT, 0x0F27, 0x00},    // ABF_DG_GB_C[7:0];
	{T4K35_8BIT, 0x0F28, 0x00},    // -/-/-/-/-/-/-/F_ENTRY_C;
	{T4K35_8BIT, 0x1101, 0x00},    // -/-/-/-/-/-/IMAGE_ORIENT_1B[1:0];
	{T4K35_8BIT, 0x1143, 0x00},    // R_FRAME_COUNT_1B[7:0];
	{T4K35_8BIT, 0x1202, 0x00},    // COAR_INTEGR_TIM_1B[15:8];
	{T4K35_8BIT, 0x1203, 0x19},    // COAR_INTEGR_TIM_1B[7:0];
	{T4K35_8BIT, 0x1204, 0x00},    // -/-/-/-/ANA_GA_CODE_GL_1B[11:8];
	{T4K35_8BIT, 0x1205, 0x40},    // ANA_GA_CODE_GL_1B[7:0];
	{T4K35_8BIT, 0x1210, 0x01},    // -/-/-/-/-/-/DG_GA_GREENR_1B[9:8];
	{T4K35_8BIT, 0x1211, 0x00},    // DG_GA_GREENR_1B[7:0];
	{T4K35_8BIT, 0x1212, 0x01},    // -/-/-/-/-/-/DG_GA_RED_1B[9:8];
	{T4K35_8BIT, 0x1213, 0x00},    // DG_GA_RED_1B[7:0];
	{T4K35_8BIT, 0x1214, 0x01},    // -/-/-/-/-/-/DG_GA_BLUE_1B[9:8];
	{T4K35_8BIT, 0x1215, 0x00},    // DG_GA_BLUE_1B[7:0];
	{T4K35_8BIT, 0x1216, 0x01},    // -/-/-/-/-/-/DG_GA_GREENB_1B[9:8];
	{T4K35_8BIT, 0x1217, 0x00},    // DG_GA_GREENB_1B[7:0];
	{T4K35_8BIT, 0x1230, 0x00},    // -/-/-/HDR_MODE_1B[4:0];
	{T4K35_8BIT, 0x1232, 0x04},    // HDR_RATIO_1_1B[7:0];
	{T4K35_8BIT, 0x1234, 0x00},    // HDR_SHT_INTEGR_TIM_1B[15:8];
	{T4K35_8BIT, 0x1235, 0x19},    // HDR_SHT_INTEGR_TIM_1B[7:0];
	{T4K35_8BIT, 0x1340, 0x09},    // FR_LENGTH_LINES_1B[15:8];
	{T4K35_8BIT, 0x1341, 0xCE},    // FR_LENGTH_LINES_1B[7:0];
	{T4K35_8BIT, 0x1342, 0x0E},    // LINE_LENGTH_PCK_1B[15:8];
	{T4K35_8BIT, 0x1343, 0x74},    // LINE_LENGTH_PCK_1B[7:0];
	{T4K35_8BIT, 0x1344, 0x00},    // -/-/-/-/H_CROP_1B[3:0];
	{T4K35_8BIT, 0x1346, 0x00},    // Y_ADDR_START_1B[15:8];
	{T4K35_8BIT, 0x1347, 0x00},    // Y_ADDR_START_1B[7:0];
	{T4K35_8BIT, 0x134A, 0x09},    // Y_ADDR_END_1B[15:8];
	{T4K35_8BIT, 0x134B, 0x9F},    // Y_ADDR_END_1B[7:0];
	{T4K35_8BIT, 0x134C, 0x0C},    // X_OUTPUT_SIZE_1B[15:8];
	{T4K35_8BIT, 0x134D, 0xD0},    // X_OUTPUT_SIZE_1B[7:0];
	{T4K35_8BIT, 0x134E, 0x09},    // Y_OUTPUT_SIZE_1B[15:8];
	{T4K35_8BIT, 0x134F, 0xA0},    // Y_OUTPUT_SIZE_1B[7:0];
	{T4K35_8BIT, 0x1401, 0x00},    // -/-/-/-/-/-/SCALING_MODE_1B[1:0];
	{T4K35_8BIT, 0x1403, 0x00},    // -/-/-/-/-/-/SPATIAL_SAMPLING_1B[1:0];
	{T4K35_8BIT, 0x1404, 0x10},    // SCALE_M_1B[7:0];
	{T4K35_8BIT, 0x1408, 0x00},    // DCROP_XOFS_1B[15:8];
	{T4K35_8BIT, 0x1409, 0x00},    // DCROP_XOFS_1B[7:0];
	{T4K35_8BIT, 0x140A, 0x00},    // DCROP_YOFS_1B[15:8];
	{T4K35_8BIT, 0x140B, 0x00},    // DCROP_YOFS_1B[7:0];
	{T4K35_8BIT, 0x140C, 0x0C},    // DCROP_WIDTH_1B[15:8];
	{T4K35_8BIT, 0x140D, 0xD0},    // DCROP_WIDTH_1B[7:0];
	{T4K35_8BIT, 0x140E, 0x09},    // DCROP_HIGT_1B[15:8];
	{T4K35_8BIT, 0x140F, 0xA0},    // DCROP_HIGT_1B[7:0];
	{T4K35_8BIT, 0x1601, 0x00},    // TEST_PATT_MODE_1B[7:0];
	{T4K35_8BIT, 0x1602, 0x02},    // -/-/-/-/-/-/TEST_DATA_RED_1B[9:8];
	{T4K35_8BIT, 0x1603, 0xC0},    // TEST_DATA_RED_1B[7:0];
	{T4K35_8BIT, 0x1604, 0x02},    // -/-/-/-/-/-/TEST_DATA_GREENR_1B[9:8];
	{T4K35_8BIT, 0x1605, 0xC0},    // TEST_DATA_GREENR_1B[7:0];
	{T4K35_8BIT, 0x1606, 0x02},    // -/-/-/-/-/-/TEST_DATA_BLUE_1B[9:8];
	{T4K35_8BIT, 0x1607, 0xC0},    // TEST_DATA_BLUE_1B[7:0];
	{T4K35_8BIT, 0x1608, 0x02},    // -/-/-/-/-/-/TEST_DATA_GREENB_1B[9:8];
	{T4K35_8BIT, 0x1609, 0xC0},    // TEST_DATA_GREENB_1B[7:0];
	{T4K35_8BIT, 0x160A, 0x00},    // HO_CURS_WIDTH_1B[15:8];
	{T4K35_8BIT, 0x160B, 0x00},    // HO_CURS_WIDTH_1B[7:0];
	{T4K35_8BIT, 0x160C, 0x00},    // HO_CURS_POSITION_1B[15:8];
	{T4K35_8BIT, 0x160D, 0x00},    // HO_CURS_POSITION_1B[7:0];
	{T4K35_8BIT, 0x160E, 0x00},    // VE_CURS_WIDTH_1B[15:8];
	{T4K35_8BIT, 0x160F, 0x00},    // VE_CURS_WIDTH_1B[7:0];
	{T4K35_8BIT, 0x1610, 0x00},    // VE_CURS_POSITION_1B[15:8];
	{T4K35_8BIT, 0x1611, 0x00},    // VE_CURS_POSITION_1B[7:0];
	{T4K35_8BIT, 0x1900, 0x00},    // -/-/-/-/-/-/H_BIN_1B[1:0];
	{T4K35_8BIT, 0x1901, 0x00},    // -/-/-/-/-/-/V_BIN_MODE_1B[1:0];
	{T4K35_8BIT, 0x1902, 0x00},    // -/-/-/-/-/-/BINNING_WEIGHTING_1B[1:0];
	{T4K35_8BIT, 0x300A, 0x00},    // Reserved ;
	{T4K35_8BIT, 0x301A, 0x44},    // Reserved ;
	{T4K35_8BIT, 0x301B, 0x44},    // Reserved ;
	{T4K35_8BIT, 0x3024, 0x00},    // Reserved ;
	{T4K35_8BIT, 0x3025, 0x65},    // Reserved ;
	{T4K35_8BIT, 0x3037, 0x06},    // Reserved ;
	{T4K35_8BIT, 0x3038, 0x06},    // Reserved ;
	{T4K35_8BIT, 0x3039, 0x06},    // Reserved ;
	{T4K35_8BIT, 0x303A, 0x06},    // Reserved ;
	{T4K35_8BIT, 0x303B, 0x0B},    // Reserved ;
	{T4K35_8BIT, 0x303C, 0x03},    // Reserved ;
	{T4K35_8BIT, 0x303D, 0x03},    // Reserved ;
	{T4K35_8BIT, 0x3053, 0xC0},    // Reserved ;
	{T4K35_8BIT, 0x305D, 0x10},    // Reserved ;
	{T4K35_8BIT, 0x305E, 0x06},    // Reserved ;
	{T4K35_8BIT, 0x306B, 0x08},    // Reserved ;
	{T4K35_8BIT, 0x3073, 0x1C},    // Reserved ;
	{T4K35_8BIT, 0x3074, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x3075, 0x03},    // Reserved ;
	{T4K35_8BIT, 0x3076, 0x7F},    // Reserved ;
	{T4K35_8BIT, 0x307E, 0x02},    // Reserved ;
	{T4K35_8BIT, 0x308D, 0x03},    // Reserved ;
	{T4K35_8BIT, 0x308E, 0x20},    // Reserved ;
	{T4K35_8BIT, 0x3091, 0x04},    // Reserved ;
	{T4K35_8BIT, 0x3096, 0x75},    // Reserved ;
	{T4K35_8BIT, 0x3097, 0x7E},    // Reserved ;
	{T4K35_8BIT, 0x3098, 0x20},    // Reserved ;
	{T4K35_8BIT, 0x30A0, 0x82},    // Reserved ;
	{T4K35_8BIT, 0x30AB, 0x30},    // Reserved ;
	{T4K35_8BIT, 0x30CE, 0x60},    // Reserved ;
	{T4K35_8BIT, 0x30CF, 0x75},    // Reserved ;
	{T4K35_8BIT, 0x30D2, 0xB3},    // Reserved ;
	{T4K35_8BIT, 0x30D5, 0x09},    // Reserved ;
	{T4K35_8BIT, 0x3134, 0x01},    // Reserved ;
	{T4K35_8BIT, 0x314D, 0x80},    // Reserved ;
	{T4K35_8BIT, 0x315B, 0x22},    // Reserved ;
	{T4K35_8BIT, 0x315C, 0x22},    // Reserved ;
	{T4K35_8BIT, 0x315D, 0x02},    // Reserved ;
	{T4K35_8BIT, 0x3165, 0x67},    // Reserved ;
	{T4K35_8BIT, 0x3168, 0xF1},    // Reserved ;
	{T4K35_8BIT, 0x3169, 0x77},    // Reserved ;
	{T4K35_8BIT, 0x316A, 0x77},    // Reserved ;
	{T4K35_8BIT, 0x3173, 0x30},    // Reserved ;
	{T4K35_8BIT, 0x31B1, 0x40},    // Reserved ;
	{T4K35_8BIT, 0x31C1, 0x27},    // Reserved ;
	{T4K35_8BIT, 0x31DB, 0x15},    // Reserved ;
	{T4K35_8BIT, 0x31DC, 0xE0},    // Reserved ;
	{T4K35_8BIT, 0x3204, 0x00},    // Reserved ;
	{T4K35_8BIT, 0x3231, 0x00},    // PWB_RG[7:0];
	{T4K35_8BIT, 0x3232, 0x00},    // PWB_GRG[7:0];
	{T4K35_8BIT, 0x3233, 0x00},    // PWB_GBG[7:0];
	{T4K35_8BIT, 0x3234, 0x00},    // PWB_BG[7:0];
	{T4K35_8BIT, 0x3282, 0xC0},    // ABPC_EN/ABPC_CK_EN/-/-/-/-/-/-/;
	{T4K35_8BIT, 0x3284, 0x06},    // Reserved ;
	{T4K35_8BIT, 0x3285, 0x03},    // Reserved ;
	{T4K35_8BIT, 0x3286, 0x02},    // Reserved ;
	{T4K35_8BIT, 0x328A, 0x03},    // Reserved ;
	{T4K35_8BIT, 0x328B, 0x02},    // Reserved ;
	{T4K35_8BIT, 0x3290, 0x20},    // Reserved ;
	{T4K35_8BIT, 0x3294, 0x10},    // Reserved ;
	{T4K35_8BIT, 0x32A8, 0x84},    // Reserved ;
	{T4K35_8BIT, 0x32B3, 0x10},    // Reserved ;
	{T4K35_8BIT, 0x32B4, 0x1F},    // Reserved ;
	{T4K35_8BIT, 0x32B7, 0x3B},    // Reserved ;
	{T4K35_8BIT, 0x32BB, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x32BC, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x32BE, 0x04},    // Reserved ;
	{T4K35_8BIT, 0x32BF, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x32C0, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x32C6, 0x50},    // Reserved ;
	{T4K35_8BIT, 0x32C8, 0x0E},    // Reserved ;
	{T4K35_8BIT, 0x32C9, 0x0E},    // Reserved ;
	{T4K35_8BIT, 0x32CA, 0x0E},    // Reserved ;
	{T4K35_8BIT, 0x32CB, 0x0E},    // Reserved ;
	{T4K35_8BIT, 0x32CC, 0x0E},    // Reserved ;
	{T4K35_8BIT, 0x32CD, 0x0E},    // Reserved ;
	{T4K35_8BIT, 0x32CE, 0x08},    // Reserved ;
	{T4K35_8BIT, 0x32CF, 0x08},    // Reserved ;
	{T4K35_8BIT, 0x32D0, 0x08},    // Reserved ;
	{T4K35_8BIT, 0x32D1, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x32D2, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x32D3, 0x0F},    // Reserved ;
	{T4K35_8BIT, 0x32D4, 0x08},    // Reserved ;
	{T4K35_8BIT, 0x32D5, 0x08},    // Reserved ;
	{T4K35_8BIT, 0x32D6, 0x08},    // Reserved ;
	{T4K35_8BIT, 0x32DD, 0x02},    // Reserved ;
	{T4K35_8BIT, 0x32E0, 0x20},    // Reserved ;
	{T4K35_8BIT, 0x32E1, 0x20},    // Reserved ;
	{T4K35_8BIT, 0x32E2, 0x20},    // Reserved ;
	{T4K35_8BIT, 0x32F7, 0x00},    // -/-/-/-/-/-/-/PP_DCROP_SW;
	{T4K35_8BIT, 0x3307, 0x28},    // Reserved ;
	{T4K35_8BIT, 0x3308, 0x27},    // Reserved ;
	{T4K35_8BIT, 0x3309, 0x0D},    // Reserved ;
	{T4K35_8BIT, 0x3384, 0x10},    // Reserved ;
	{T4K35_8BIT, 0x3424, 0x00},    // -/-/-/-/TRIG_Z5_X/TX_TRIGOPT/CLKULPS/ESCREQ;
	{T4K35_8BIT, 0x3425, 0x78},    // ESCDATA[7:0];
	{T4K35_8BIT, 0x3427, 0xC0},    // MIPI_CLKVBLK/MIPI_CLK_MODE/-/-/HS_SR_CNT[1:0]/LP_SR_CNT[1:0];
	{T4K35_8BIT, 0x3430, 0xA7},    // NUMWAKE[7:0];
	{T4K35_8BIT, 0x3431, 0x60},    // NUMINIT[7:0];
	{T4K35_8BIT, 0x3432, 0x11},    // -/-/-/CLK0_M/-/-/-/LNKBTWK_ON;
	GROUPED_PARAMETER_HOLD_DISABLE,
	{T4K35_TOK_TERM, 0, 0}
};
/* TODO settings of preview/still/video will be updated with new use case */
struct t4k35_resolution t4k35_res_preview[] = {
	{
		.desc = "PREVIEW_QCIF_192x160_30fps",
		.regs = t4k35_Bin_192x160_30fps_1124,
			.width = 192,
			.height = 160,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
			.used = 0,
			.skip_frames = 3,
			.fps_options = {
				{
				.fps = 30,
				.pixels_per_line = 0x07E2,
				.lines_per_frame = 0x05F0,
				},
			{
			}
		},
	},
	{
			.desc = "PREVIEW_FHD_1936x1096_30fps",
			.regs = t4k35_FHD_1936x1096_30fps_1124,
			.width = 1936,
			.height = 1096,
			.bin_factor_x = 1,
			.bin_factor_y = 1,
			.used = 0,
			.skip_frames = 3,
			.fps_options = {
                    {
					.fps = 30,
					.pixels_per_line = 0x0EFA,
					.lines_per_frame = 0x0780,
                    },
                    {
                    }
            },
	},
	{
		.desc = "PREVIEW_Bin_1616x916_30fps",
		.regs = t4k35_Bin_1616x916_30fps_1124,
		.width = 1616,
		.height = 916,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				 .fps = 30,
				 .pixels_per_line = 0x07E2,
				 .lines_per_frame = 0x05F0,
			},
			{
			}
		},
	},
	{
		.desc = "PREVIEW_Full_3280x1852_30fps",
		.regs = t4k35_Full_3280x1852_30fps_1124,
		.width = 3280,
		.height = 1852,
		.bin_factor_x = 1,
		.bin_factor_y = 1,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				.fps = 30,
				.pixels_per_line = 0x0EFA,
				.lines_per_frame = 0x0780,
			},
			{
			}
		},
	},
	{
		.desc = "PREVIEW_Full_3280x2464_25fps",
		.regs = t4k35_Full_3280x2464_25fps_1124,
		.width = 3280,
		.height = 2464,
		.bin_factor_x = 1,
		.bin_factor_y = 1,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				.fps = 25,
				.pixels_per_line = 0x0DA0,
				.lines_per_frame = 0x09E4,
			},
			{
			}
		},
	},
	{
		.desc = "PREVIEW_Bin_1632x1228_30fps",
		.regs = t4k35_Bin_1632x1228_30fps_1124,
		.width = 1632,
		.height = 1228,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				 .fps = 30,
				 .pixels_per_line = 0x07E2,
				 .lines_per_frame = 0x05F0,
			},
			{
			}
		},
	},
};

struct t4k35_resolution t4k35_res_still[] = {
	{
		.desc = "STILL_Bin_1616x916_30fps",
		.regs = t4k35_Bin_1616x916_30fps_1124,
		.width = 1616,
		.height = 916,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				 .fps = 30,
				 .pixels_per_line = 0x07E2,
				 .lines_per_frame = 0x05F0,
			},
			{
			}
		},
	},
	{
		.desc = "STILL_Full_3280x1852_15fps",
		.regs = t4k35_Full_3280x1852_15fps_1124,
		.width = 3280,
		.height = 1852,
		.bin_factor_x = 1,
		.bin_factor_y = 1,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				.fps = 15,
				.pixels_per_line = 0x0EFA,
				.lines_per_frame = 0x1780, /* ASUS BSP ZZ Add for HDR abnomal EV from 0x07 to 0x0E*/
			},
			{
			}
		},
	},
	{
		.desc = "STILL_Full_3280x2464_15fps",
		.regs = t4k35_Full_3280x2464_15fps_1124,
		.width = 3280,
		.height = 2464,
		.bin_factor_x = 1,
		.bin_factor_y = 1,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				.fps = 15,
				.pixels_per_line = 0x0E32,
				.lines_per_frame = 0x17E4, /* ASUS BSP ZZ Add for HDR abnomal EV from 0x09 to 0x10 */
			},
			{
			}
		},
	},
	{
		.desc = "STILL_Bin_1632x1228_30fps",
		.regs = t4k35_Bin_1632x1228_30fps_1124,
		.width = 1632,
		.height = 1228,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				 .fps = 30,
				 .pixels_per_line = 0x07E2,
				 .lines_per_frame = 0x05F0,
			},
			{
			}
		},
	},
};

struct t4k35_resolution t4k35_res_video[] = {
        {
		.desc = "VIDEO_QCIF_192x160_30fps",
		.regs = t4k35_Bin_192x160_30fps_1124,
                .width = 192,
                .height = 160,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
                .used = 0,
                .skip_frames = 3,
                .fps_options = {
                        {
				.fps = 30,
				.pixels_per_line = 0x07E2,
				.lines_per_frame = 0x05F0,
                        },
                        {
                        }
                },
        },
	{
		.desc = "VIDEO_CIF_368x304_30fps",
		.regs = t4k35_Bin_368x304_30fps_1124,
		.width = 368,
		.height = 304,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				.fps = 30,
				.pixels_per_line = 0x07E2,
				.lines_per_frame = 0x05F0,
			},
			{
			}
		},
	},
		{
		.desc = "VIDEO_VGA_656x496_30fps",
		.regs = t4k35_Bin_656x496_30fps_1124,
                .width = 656,
                .height = 496,
                .bin_factor_x = 2,
                .bin_factor_y = 2,
                .used = 0,
                .skip_frames = 3,
                .fps_options = {
                        {
				.fps = 30,
				.pixels_per_line = 0x07E2,
				.lines_per_frame = 0x05F0,
                        },
                        {
                        }
                },
		},
		{
		.desc = "VIDEO_VGA_736x496_30fps",
		.regs = t4k35_Bin_736x496_30fps_1124,
		.width = 736,
		.height = 496,
		.bin_factor_x = 2,
		.bin_factor_y = 2,
		.used = 0,
		.skip_frames = 3,
		.fps_options = {
			{
				.fps = 30,
				.pixels_per_line = 0x07E2,
				.lines_per_frame = 0x05F0,
			},
			{
			}
		},
		},
        {
		.desc = "VIDEO_HD_1296x736_30fps",
		.regs = t4k35_HD_1296x736_30fps_1124,
                .width = 1296,
                .height = 736,
                .bin_factor_x = 2,
                .bin_factor_y = 2,
                .used = 0,
                .skip_frames = 3,
                .fps_options = {
                        {
				.fps = 30,
				.pixels_per_line = 0x07E2,
				.lines_per_frame = 0x05F0,
                        },
                        {
                        }
                },
        },
        {
		.desc = "VIDEO_FHD_1936x1096_30fps",
		.regs = t4k35_FHD_1936x1096_30fps_1124,
                .width = 1936,
                .height = 1096,
                .bin_factor_x = 1,
                .bin_factor_y = 1,
                .used = 0,
                .skip_frames = 3,
                .fps_options = {
                        {
				.fps = 30,
				.pixels_per_line = 0x0D6E,
				.lines_per_frame = 0x08FE,
                        },
                        {
                        }
                },
        },
};

struct t4k35_vcm {
	int (*power_up)(struct v4l2_subdev *sd);
	int (*power_down)(struct v4l2_subdev *sd);
	int (*init)(struct v4l2_subdev *sd);
	int (*t_focus_vcm)(struct v4l2_subdev *sd, u16 val);
	int (*t_focus_abs)(struct v4l2_subdev *sd, s32 value);
	int (*t_focus_rel)(struct v4l2_subdev *sd, s32 value);
	int (*q_focus_status)(struct v4l2_subdev *sd, s32 *value);
	int (*q_focus_abs)(struct v4l2_subdev *sd, s32 *value);
	int (*t_vcm_slew)(struct v4l2_subdev *sd, s32 value);
	int (*t_vcm_timing)(struct v4l2_subdev *sd, s32 value);
};

struct t4k35_otp {
	void *(*otp_read)(struct v4l2_subdev *sd, u8 dev_addr,
		u32 start_addr, u32 size);
	u32 start_addr;
	u32 size;
	u8 dev_addr;
};

struct max_res {
	int res_max_width;
	int res_max_height;
};

struct max_res t4k35_max_res[] = {
	[T4K35_ID] = {
		.res_max_width = T4K35_RES_WIDTH_MAX,
		.res_max_height = T4K35_RES_HEIGHT_MAX,
	},
};

struct t4k35_settings {
	struct t4k35_reg const *init_settings;
	struct t4k35_resolution *res_preview;
	struct t4k35_resolution *res_still;
	struct t4k35_resolution *res_video;
	int n_res_preview;
	int n_res_still;
	int n_res_video;
};

struct t4k35_settings t4k35_sets[] = {
	[T4K35_MERRFLD] = {
		.init_settings = t4k35_init_settings_1124,
		.res_preview = t4k35_res_preview,
		.res_still = t4k35_res_still,
		.res_video = t4k35_res_video,
		.n_res_preview = ARRAY_SIZE(t4k35_res_preview),
		.n_res_still = ARRAY_SIZE(t4k35_res_still),
		.n_res_video = ARRAY_SIZE(t4k35_res_video),
	},
};

#define	v4l2_format_capture_type_entry(_width, _height, \
		_pixelformat, _bytesperline, _colorspace) \
	{\
		.type = V4L2_BUF_TYPE_VIDEO_CAPTURE,\
		.fmt.pix.width = (_width),\
		.fmt.pix.height = (_height),\
		.fmt.pix.pixelformat = (_pixelformat),\
		.fmt.pix.bytesperline = (_bytesperline),\
		.fmt.pix.colorspace = (_colorspace),\
		.fmt.pix.sizeimage = (_height)*(_bytesperline),\
	}

#define	s_output_format_entry(_width, _height, _pixelformat, \
		_bytesperline, _colorspace, _fps) \
	{\
		.v4l2_fmt = v4l2_format_capture_type_entry(_width, \
			_height, _pixelformat, _bytesperline, \
				_colorspace),\
		.fps = (_fps),\
	}

#define	s_output_format_reg_entry(_width, _height, _pixelformat, \
		_bytesperline, _colorspace, _fps, _reg_setting) \
	{\
		.s_fmt = s_output_format_entry(_width, _height,\
				_pixelformat, _bytesperline, \
				_colorspace, _fps),\
		.reg_setting = (_reg_setting),\
	}

struct s_ctrl_id {
	struct v4l2_queryctrl qc;
	int (*s_ctrl)(struct v4l2_subdev *sd, u32 val);
	int (*g_ctrl)(struct v4l2_subdev *sd, u32 *val);
};

#define	v4l2_queryctrl_entry_integer(_id, _name,\
		_minimum, _maximum, _step, \
		_default_value, _flags)	\
	{\
		.id = (_id), \
		.type = V4L2_CTRL_TYPE_INTEGER, \
		.name = _name, \
		.minimum = (_minimum), \
		.maximum = (_maximum), \
		.step = (_step), \
		.default_value = (_default_value),\
		.flags = (_flags),\
	}
#define	v4l2_queryctrl_entry_boolean(_id, _name,\
		_default_value, _flags)	\
	{\
		.id = (_id), \
		.type = V4L2_CTRL_TYPE_BOOLEAN, \
		.name = _name, \
		.minimum = 0, \
		.maximum = 1, \
		.step = 1, \
		.default_value = (_default_value),\
		.flags = (_flags),\
	}

#define	s_ctrl_id_entry_integer(_id, _name, \
		_minimum, _maximum, _step, \
		_default_value, _flags, \
		_s_ctrl, _g_ctrl)	\
	{\
		.qc = v4l2_queryctrl_entry_integer(_id, _name,\
				_minimum, _maximum, _step,\
				_default_value, _flags), \
		.s_ctrl = _s_ctrl, \
		.g_ctrl = _g_ctrl, \
	}

#define	s_ctrl_id_entry_boolean(_id, _name, \
		_default_value, _flags, \
		_s_ctrl, _g_ctrl)	\
	{\
		.qc = v4l2_queryctrl_entry_boolean(_id, _name,\
				_default_value, _flags), \
		.s_ctrl = _s_ctrl, \
		.g_ctrl = _g_ctrl, \
	}


struct t4k35_control {
	struct v4l2_queryctrl qc;
	int (*query)(struct v4l2_subdev *sd, s32 *value);
	int (*tweak)(struct v4l2_subdev *sd, s32 value);
};

/* t4k35 device structure */
struct t4k35_device {
	struct v4l2_subdev sd;
	struct media_pad pad;
	struct v4l2_mbus_framefmt format;
	struct camera_sensor_platform_data *platform_data;
	struct mutex input_lock; /* serialize sensor's ioctl */
	int fmt_idx;
	int status;
	int streaming;
	int power;
	int run_mode;
	int vt_pix_clk_freq_mhz;
	int fps_index;
	u32 focus;
	u16 sensor_id;			/* Sensor id from registers */
	u16 i2c_id;			/* Sensor id from i2c_device_id */
	u16 coarse_itg;
	u16 fine_itg;
	u16 digital_gain;
	u16 gain;
	u16 pixels_per_line;
	u16 lines_per_frame;
	u8 fps;
	const struct t4k35_reg *regs;
	u8 res;
	u8 type;
	u8 sensor_revision;
	void *otp_data;
	struct t4k35_settings *mode_tables;
	struct t4k35_vcm *vcm_driver;
	struct t4k35_otp *otp_driver;
	const struct t4k35_resolution *curr_res_table;
	int entries_curr_table;
	const struct firmware *fw;

	/* used for h/b blank tuning */
	struct v4l2_ctrl_handler ctrl_handler;
	struct v4l2_ctrl *pixel_rate;
	struct v4l2_ctrl *h_blank;
	struct v4l2_ctrl *v_blank;
};

#define to_t4k35_sensor(x) container_of(x, struct t4k35_device, sd)

#define T4K35_MAX_WRITE_BUF_SIZE	32
struct t4k35_write_buffer {
	u16 addr;
	u8 data[T4K35_MAX_WRITE_BUF_SIZE];
};

struct t4k35_write_ctrl {
	int index;
	struct t4k35_write_buffer buffer;
};

static const struct t4k35_reg t4k35_soft_standby[] = {
	{T4K35_8BIT, 0x0100, 0x00},
	{T4K35_TOK_TERM, 0, 0}
};

static const struct t4k35_reg t4k35_streaming[] = {
	{T4K35_8BIT, 0x0100, 0x01},
	{T4K35_TOK_TERM, 0, 0}
};

static const struct t4k35_reg t4k35_param_hold[] = {
	{T4K35_8BIT, 0x0104, 0x01},	/* GROUPED_PARAMETER_HOLD */
	{T4K35_TOK_TERM, 0, 0}
};

static const struct t4k35_reg t4k35_param_update[] = {
	{T4K35_8BIT, 0x0104, 0x00},	/* GROUPED_PARAMETER_HOLD */
	{T4K35_TOK_TERM, 0, 0}
};

extern int dw9714_vcm_power_up(struct v4l2_subdev *sd);
extern int dw9714_vcm_power_down(struct v4l2_subdev *sd);
extern int dw9714_vcm_init(struct v4l2_subdev *sd);

extern int dw9714_t_focus_vcm(struct v4l2_subdev *sd, u16 val);
extern int dw9714_t_focus_abs(struct v4l2_subdev *sd, s32 value);
extern int dw9714_t_focus_rel(struct v4l2_subdev *sd, s32 value);
extern int dw9714_q_focus_status(struct v4l2_subdev *sd, s32 *value);
extern int dw9714_q_focus_abs(struct v4l2_subdev *sd, s32 *value);
extern int dw9714_t_vcm_slew(struct v4l2_subdev *sd, s32 value);
extern int dw9714_t_vcm_timing(struct v4l2_subdev *sd, s32 value);

/*extern int vcm_power_up(struct v4l2_subdev *sd);
extern int vcm_power_down(struct v4l2_subdev *sd);*/

struct t4k35_vcm t4k35_vcms[] = {
	[T4K35_MERRFLD] = {
		.power_up = dw9714_vcm_power_up,
		.power_down = dw9714_vcm_power_down,
		.init = dw9714_vcm_init,
		.t_focus_vcm = dw9714_t_focus_vcm,
		.t_focus_abs = dw9714_t_focus_abs,
		.t_focus_rel = dw9714_t_focus_rel,
		.q_focus_status = dw9714_q_focus_status,
		.q_focus_abs = dw9714_q_focus_abs,
		.t_vcm_slew = dw9714_t_vcm_slew,
		.t_vcm_timing = dw9714_t_vcm_timing,
	},
/*	[T4K35_ID_DEFAULT] = {
		.power_up = vcm_power_up,
		.power_down = vcm_power_down,
	},*/
};
#endif
